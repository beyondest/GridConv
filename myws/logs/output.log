D:\VS_ws\python\GridConv\src\base_modules.py:51: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ckpt = torch.load(opt.load,map_location='cpu')
D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:254: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  if is_training:
D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:168: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  out_fold = F.fold(out, (int(h),int(w)), (1,1))
D:\VS_ws\python\python310_env\lib\site-packages\torch\onnx\_internal\jit_utils.py:314: UserWarning: Constant folding - Only steps=1 can be constant folded for opset >= 10 onnx::Slice op. Constant folding not applied. (Triggered internally at C:\actions-runner\_work\pytorch\pytorch\builder\windows\pytorch\torch\csrc\jit\passes\onnx\constant_fold.cpp:181.)
  _C._jit_pass_onnx_node_shape_type_inference(node, params_dict, opset_version)
D:\VS_ws\python\python310_env\lib\site-packages\torch\onnx\utils.py:739: UserWarning: Constant folding - Only steps=1 can be constant folded for opset >= 10 onnx::Slice op. Constant folding not applied. (Triggered internally at C:\actions-runner\_work\pytorch\pytorch\builder\windows\pytorch\torch\csrc\jit\passes\onnx\constant_fold.cpp:181.)
  _C._jit_pass_onnx_graph_shape_type_inference(
D:\VS_ws\python\python310_env\lib\site-packages\torch\onnx\utils.py:1244: UserWarning: Constant folding - Only steps=1 can be constant folded for opset >= 10 onnx::Slice op. Constant folding not applied. (Triggered internally at C:\actions-runner\_work\pytorch\pytorch\builder\windows\pytorch\torch\csrc\jit\passes\onnx\constant_fold.cpp:181.)
  _C._jit_pass_onnx_graph_shape_type_inference(
Exported graph: graph(%onnx::MatMul_0 : Float(1, 17, 2, strides=[34, 2, 1], requires_grad=0, device=cpu),
      %batch_norm1.weight : Float(256, strides=[1], requires_grad=1, device=cpu),
      %batch_norm1.bias : Float(256, strides=[1], requires_grad=1, device=cpu),
      %batch_norm1.running_mean : Float(256, strides=[1], requires_grad=0, device=cpu),
      %batch_norm1.running_var : Float(256, strides=[1], requires_grad=0, device=cpu),
      %atten_conv1.position_fc.weight : Float(225, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu),
      %atten_conv1.position_fc.bias : Float(225, strides=[1], requires_grad=1, device=cpu),
      %linear_stages.0.batch_norm1.weight : Float(256, strides=[1], requires_grad=1, device=cpu),
      %linear_stages.0.batch_norm1.bias : Float(256, strides=[1], requires_grad=1, device=cpu),
      %linear_stages.0.batch_norm1.running_mean : Float(256, strides=[1], requires_grad=0, device=cpu),
      %linear_stages.0.batch_norm1.running_var : Float(256, strides=[1], requires_grad=0, device=cpu),
      %linear_stages.0.batch_norm2.weight : Float(256, strides=[1], requires_grad=1, device=cpu),
      %linear_stages.0.batch_norm2.bias : Float(256, strides=[1], requires_grad=1, device=cpu),
      %linear_stages.0.batch_norm2.running_mean : Float(256, strides=[1], requires_grad=0, device=cpu),
      %linear_stages.0.batch_norm2.running_var : Float(256, strides=[1], requires_grad=0, device=cpu),
      %linear_stages.0.atten_conv1.position_fc.weight : Float(225, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu),
      %linear_stages.0.atten_conv1.position_fc.bias : Float(225, strides=[1], requires_grad=1, device=cpu),
      %linear_stages.0.atten_conv2.position_fc.weight : Float(225, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu),
      %linear_stages.0.atten_conv2.position_fc.bias : Float(225, strides=[1], requires_grad=1, device=cpu),
      %linear_stages.1.batch_norm1.weight : Float(256, strides=[1], requires_grad=1, device=cpu),
      %linear_stages.1.batch_norm1.bias : Float(256, strides=[1], requires_grad=1, device=cpu),
      %linear_stages.1.batch_norm1.running_mean : Float(256, strides=[1], requires_grad=0, device=cpu),
      %linear_stages.1.batch_norm1.running_var : Float(256, strides=[1], requires_grad=0, device=cpu),
      %linear_stages.1.batch_norm2.weight : Float(256, strides=[1], requires_grad=1, device=cpu),
      %linear_stages.1.batch_norm2.bias : Float(256, strides=[1], requires_grad=1, device=cpu),
      %linear_stages.1.batch_norm2.running_mean : Float(256, strides=[1], requires_grad=0, device=cpu),
      %linear_stages.1.batch_norm2.running_var : Float(256, strides=[1], requires_grad=0, device=cpu),
      %linear_stages.1.atten_conv1.position_fc.weight : Float(225, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu),
      %linear_stages.1.atten_conv1.position_fc.bias : Float(225, strides=[1], requires_grad=1, device=cpu),
      %linear_stages.1.atten_conv2.position_fc.weight : Float(225, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu),
      %linear_stages.1.atten_conv2.position_fc.bias : Float(225, strides=[1], requires_grad=1, device=cpu),
      %atten_conv2.position_fc.weight : Float(225, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu),
      %atten_conv2.position_fc.bias : Float(225, strides=[1], requires_grad=1, device=cpu),
      %sgt_layer.sgt_trans_mat : Float(1, 25, 17, strides=[425, 17, 1], requires_grad=1, device=cpu),
      %onnx::Conv_1975 : Float(16, 2, 1, 1, strides=[2, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::Conv_1976 : Float(16, strides=[1], requires_grad=0, device=cpu),
      %onnx::Conv_1978 : Float(16, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::Conv_1979 : Float(16, strides=[1], requires_grad=0, device=cpu),
      %onnx::Conv_1981 : Float(16, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::Conv_1982 : Float(16, strides=[1], requires_grad=0, device=cpu),
      %onnx::Conv_1984 : Float(16, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::Conv_1985 : Float(16, strides=[1], requires_grad=0, device=cpu),
      %onnx::Conv_1987 : Float(16, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::Conv_1988 : Float(16, strides=[1], requires_grad=0, device=cpu),
      %onnx::Conv_1990 : Float(16, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::Conv_1991 : Float(16, strides=[1], requires_grad=0, device=cpu),
      %onnx::MatMul_2036 : Float(18, 256, strides=[1, 18], requires_grad=0, device=cpu),
      %onnx::Add_2037 : Float(1, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::MatMul_2047 : Float(18, 256, strides=[1, 18], requires_grad=0, device=cpu),
      %onnx::Add_2048 : Float(1, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::MatMul_2066 : Float(2304, 256, strides=[1, 2304], requires_grad=0, device=cpu),
      %onnx::Add_2067 : Float(1, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::MatMul_2077 : Float(2304, 256, strides=[1, 2304], requires_grad=0, device=cpu),
      %onnx::Add_2078 : Float(1, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::MatMul_2096 : Float(2304, 256, strides=[1, 2304], requires_grad=0, device=cpu),
      %onnx::Add_2097 : Float(1, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::MatMul_2107 : Float(2304, 256, strides=[1, 2304], requires_grad=0, device=cpu),
      %onnx::Add_2108 : Float(1, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::MatMul_2126 : Float(2304, 256, strides=[1, 2304], requires_grad=0, device=cpu),
      %onnx::Add_2127 : Float(1, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::MatMul_2137 : Float(2304, 256, strides=[1, 2304], requires_grad=0, device=cpu),
      %onnx::Add_2138 : Float(1, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::MatMul_2156 : Float(2304, 256, strides=[1, 2304], requires_grad=0, device=cpu),
      %onnx::Add_2157 : Float(1, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::MatMul_2167 : Float(2304, 256, strides=[1, 2304], requires_grad=0, device=cpu),
      %onnx::Add_2168 : Float(1, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=0, device=cpu),
      %onnx::MatMul_2186 : Float(2304, 3, strides=[1, 2304], requires_grad=0, device=cpu),
      %onnx::MatMul_2196 : Float(2304, 3, strides=[1, 2304], requires_grad=0, device=cpu)):
  %/sgt_layer/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={-1}, onnx_name="/sgt_layer/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.AutoSGT::sgt_layer
  %/sgt_layer/ArgMax_output_0 : Long(1, 25, strides=[25, 1], requires_grad=0, device=cpu) = onnx::ArgMax[axis=-1, keepdims=0, select_last_index=0, onnx_name="/sgt_layer/ArgMax"](%sgt_layer.sgt_trans_mat), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.AutoSGT::sgt_layer # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:263:0
  %/sgt_layer/Constant_1_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value= 0  1 [ CPULongType{2} ], onnx_name="/sgt_layer/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.AutoSGT::sgt_layer # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:263:0
  %/sgt_layer/OneHot_output_0 : Long(1, 25, *, strides=[425, 17, 1], requires_grad=0, device=cpu) = onnx::OneHot[axis=-1, onnx_name="/sgt_layer/OneHot"](%/sgt_layer/ArgMax_output_0, %/sgt_layer/Constant_output_0, %/sgt_layer/Constant_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.AutoSGT::sgt_layer # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:263:0
  %/sgt_layer/Cast_output_0 : Float(1, 25, *, strides=[425, 17, 1], requires_grad=0, device=cpu) = onnx::Cast[to=1, onnx_name="/sgt_layer/Cast"](%/sgt_layer/OneHot_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.AutoSGT::sgt_layer # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:263:0
  %/Constant_output_0 : Long(3, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value= 1  1  1 [ CPULongType{3} ], onnx_name="/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:69:0
  %/Constant_1_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:69:0
  %/ConstantOfShape_output_0 : Long(3, strides=[1], device=cpu) = onnx::ConstantOfShape[value={1}, onnx_name="/ConstantOfShape"](%/Constant_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:69:0
  %/Expand_output_0 : Float(1, 25, *, device=cpu) = onnx::Expand[onnx_name="/Expand"](%/sgt_layer/Cast_output_0, %/ConstantOfShape_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:69:0
  %/Tile_output_0 : Float(1, 25, *, strides=[425, 17, 1], requires_grad=0, device=cpu) = onnx::Tile[onnx_name="/Tile"](%/Expand_output_0, %/Constant_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:69:0
  %/MatMul_output_0 : Float(1, 25, 2, strides=[50, 2, 1], requires_grad=0, device=cpu) = onnx::MatMul[onnx_name="/MatMul"](%/Tile_output_0, %onnx::MatMul_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:71:0
  %/Constant_2_output_0 : Long(4, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value= 1  5  5  2 [ CPULongType{4} ], onnx_name="/Constant_2"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:72:0
  %/Reshape_output_0 : Float(1, 5, 5, 2, strides=[50, 10, 2, 1], requires_grad=0, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/Reshape"](%/MatMul_output_0, %/Constant_2_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:72:0
  %/Transpose_output_0 : Float(1, 2, 5, 5, strides=[50, 1, 10, 2], requires_grad=0, device=cpu) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/Transpose"](%/Reshape_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:72:0
  %onnx::Col2Im_139 : Long(2, strides=[1], device=cpu) = onnx::Constant[value= 1  1 [ CPULongType{2} ]]()
  %/atten_conv1/avgpool/GlobalAveragePool_output_0 : Float(1, 2, 1, 1, strides=[2, 1, 2, 2], requires_grad=0, device=cpu) = onnx::GlobalAveragePool[onnx_name="/atten_conv1/avgpool/GlobalAveragePool"](%/Transpose_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.pooling.AdaptiveAvgPool2d::avgpool # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1260:0
  %/atten_conv1/fc/Conv_output_0 : Float(1, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/atten_conv1/fc/Conv"](%/atten_conv1/avgpool/GlobalAveragePool_output_0, %onnx::Conv_1975, %onnx::Conv_1976), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.conv.Conv2d::fc # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\conv.py:454:0
  %/atten_conv1/relu/Relu_output_0 : Float(1, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/atten_conv1/relu/Relu"](%/atten_conv1/fc/Conv_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.activation.ReLU::relu # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1498:0
  %/atten_conv1/position_fc/Conv_output_0 : Float(1, 225, 1, 1, strides=[225, 1, 1, 1], requires_grad=0, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/atten_conv1/position_fc/Conv"](%/atten_conv1/relu/Relu_output_0, %atten_conv1.position_fc.weight, %atten_conv1.position_fc.bias), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.conv.Conv2d::position_fc # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\conv.py:454:0
  %/atten_conv1/Constant_output_0 : Long(4, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value= 1  9  5  5 [ CPULongType{4} ], onnx_name="/atten_conv1/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/atten_conv1/Reshape_output_0 : Float(1, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/atten_conv1/Reshape"](%/atten_conv1/position_fc/Conv_output_0, %/atten_conv1/Constant_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/atten_conv1/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={30}, onnx_name="/atten_conv1/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:235:0
  %/atten_conv1/Div_output_0 : Float(1, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Div[onnx_name="/atten_conv1/Div"](%/atten_conv1/Reshape_output_0, %/atten_conv1/Constant_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:235:0
  %/atten_conv1/sigmoid/Sigmoid_output_0 : Float(1, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Sigmoid[onnx_name="/atten_conv1/sigmoid/Sigmoid"](%/atten_conv1/Div_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.activation.Sigmoid::sigmoid # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\activation.py:301:0
  %/w1/Constant_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={2}, onnx_name="/w1/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/w1/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={9223372036854775807}, onnx_name="/w1/Constant_2"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Slice_output_0 : Float(1, 2, 1, 5, strides=[10, 5, 5, 1], device=cpu) = onnx::Slice[onnx_name="/w1/Slice"](%/Transpose_output_0, %/w1/Constant_1_output_0, %/w1/Constant_2_output_0, %/w1/Constant_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_3_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={2}, onnx_name="/w1/Constant_3"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_4_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_4"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_5_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={1}, onnx_name="/w1/Constant_5"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Slice_1_output_0 : Float(1, 2, 1, 5, strides=[10, 5, 5, 1], device=cpu) = onnx::Slice[onnx_name="/w1/Slice_1"](%/Transpose_output_0, %/w1/Constant_4_output_0, %/w1/Constant_5_output_0, %/w1/Constant_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Concat_output_0 : Float(1, 2, 7, 5, strides=[70, 35, 5, 1], device=cpu) = onnx::Concat[axis=2, onnx_name="/w1/Concat"](%/w1/Slice_output_0, %/Transpose_output_0, %/w1/Slice_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_6_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={3}, onnx_name="/w1/Constant_6"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_7_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/w1/Constant_7"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_8_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={9223372036854775807}, onnx_name="/w1/Constant_8"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Slice_2_output_0 : Float(1, 2, 7, 1, strides=[14, 7, 1, 1], device=cpu) = onnx::Slice[onnx_name="/w1/Slice_2"](%/w1/Concat_output_0, %/w1/Constant_7_output_0, %/w1/Constant_8_output_0, %/w1/Constant_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_9_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={3}, onnx_name="/w1/Constant_9"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_10_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_10"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_11_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={1}, onnx_name="/w1/Constant_11"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Slice_3_output_0 : Float(1, 2, 7, 1, strides=[14, 7, 1, 1], device=cpu) = onnx::Slice[onnx_name="/w1/Slice_3"](%/w1/Concat_output_0, %/w1/Constant_10_output_0, %/w1/Constant_11_output_0, %/w1/Constant_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Concat_1_output_0 : Float(1, 2, 7, 7, strides=[98, 49, 7, 1], requires_grad=0, device=cpu) = onnx::Concat[axis=3, onnx_name="/w1/Concat_1"](%/w1/Slice_2_output_0, %/w1/Concat_output_0, %/w1/Slice_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_12_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={4}, onnx_name="/w1/Constant_12"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_13_output_0 : Long(4, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value= 1  1  1  1 [ CPULongType{4} ], onnx_name="/w1/Constant_13"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/ConstantOfShape_output_0 : Long(4, strides=[1], device=cpu) = onnx::ConstantOfShape[value={0}, onnx_name="/w1/ConstantOfShape"](%/w1/Constant_12_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Concat_2_output_0 : Long(8, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w1/Concat_2"](%/w1/Constant_13_output_0, %/w1/ConstantOfShape_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_14_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=-1  2 [ CPULongType{2} ], onnx_name="/w1/Constant_14"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Reshape_output_0 : Long(4, 2, strides=[2, 1], device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w1/Reshape"](%/w1/Concat_2_output_0, %/w1/Constant_14_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_15_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_15"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_16_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/w1/Constant_16"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_17_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-9223372036854775807}, onnx_name="/w1/Constant_17"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_18_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/w1/Constant_18"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Slice_4_output_0 : Long(4, 2, strides=[2, 1], device=cpu) = onnx::Slice[onnx_name="/w1/Slice_4"](%/w1/Reshape_output_0, %/w1/Constant_16_output_0, %/w1/Constant_17_output_0, %/w1/Constant_15_output_0, %/w1/Constant_18_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Transpose_output_0 : Long(2, 4, strides=[4, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/w1/Transpose"](%/w1/Slice_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Constant_19_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/w1/Constant_19"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Reshape_1_output_0 : Long(8, strides=[1], device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w1/Reshape_1"](%/w1/Transpose_output_0, %/w1/Constant_19_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Cast_output_0 : Long(8, strides=[1], device=cpu) = onnx::Cast[to=7, onnx_name="/w1/Cast"](%/w1/Reshape_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Pad_output_0 : Float(*, *, *, *, strides=[98, 1, 14, 2], requires_grad=0, device=cpu) = onnx::Pad[mode="edge", onnx_name="/w1/Pad"](%/Transpose_output_0, %/w1/Cast_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w1/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w1/Shape"](%/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_20_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/w1/Constant_20"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w1/Gather"](%/w1/Shape_output_0, %/w1/Constant_20_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w1/Shape_1"](%/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_21_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/w1/Constant_21"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w1/Gather_1"](%/w1/Shape_1_output_0, %/w1/Constant_21_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_22_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_22"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Add_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/w1/Add"](%/w1/Gather_output_0, %/w1/Constant_22_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_23_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/w1/Constant_23"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Sub_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/w1/Sub"](%/w1/Add_output_0, %/w1/Constant_23_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_24_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_24"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_25_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w1/Constant_25"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Range_output_0 : Long(5, strides=[1], device=cpu) = onnx::Range[onnx_name="/w1/Range"](%/w1/Constant_24_output_0, %/w1/Sub_output_0, %/w1/Constant_25_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_26_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_26"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Unsqueeze_output_0 : Long(1, 5, strides=[5, 1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze"](%/w1/Range_output_0, %/w1/Constant_26_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_27_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/w1/Constant_27"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Add_1_output_0 : Long(3, 5, strides=[5, 1], device=cpu) = onnx::Add[onnx_name="/w1/Add_1"](%/w1/Unsqueeze_output_0, %/w1/Constant_27_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_28_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_28"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Add_2_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/w1/Add_2"](%/w1/Gather_1_output_0, %/w1/Constant_28_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_29_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/w1/Constant_29"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Sub_1_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/w1/Sub_1"](%/w1/Add_2_output_0, %/w1/Constant_29_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_30_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_30"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_31_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w1/Constant_31"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Range_1_output_0 : Long(5, strides=[1], device=cpu) = onnx::Range[onnx_name="/w1/Range_1"](%/w1/Constant_30_output_0, %/w1/Sub_1_output_0, %/w1/Constant_31_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_32_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_32"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Unsqueeze_1_output_0 : Long(1, 5, strides=[5, 1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_1"](%/w1/Range_1_output_0, %/w1/Constant_32_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_33_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/w1/Constant_33"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Add_3_output_0 : Long(3, 5, strides=[5, 1], device=cpu) = onnx::Add[onnx_name="/w1/Add_3"](%/w1/Unsqueeze_1_output_0, %/w1/Constant_33_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w1/Shape_2"](%/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_34_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_34"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w1/Gather_2"](%/w1/Shape_2_output_0, %/w1/Constant_34_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Shape_3_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w1/Shape_3"](%/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_35_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w1/Constant_35"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Gather_3_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w1/Gather_3"](%/w1/Shape_3_output_0, %/w1/Constant_35_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_36_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/w1/Constant_36"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Mul_output_0 : Long(device=cpu) = onnx::Mul[onnx_name="/w1/Mul"](%/w1/Gather_3_output_0, %/w1/Constant_36_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_37_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_37"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_2"](%/w1/Gather_2_output_0, %/w1/Constant_37_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_38_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_38"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Unsqueeze_3_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_3"](%/w1/Mul_output_0, %/w1/Constant_38_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_39_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/w1/Constant_39"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Concat_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w1/Concat_3"](%/w1/Unsqueeze_2_output_0, %/w1/Unsqueeze_3_output_0, %/w1/Constant_39_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_40_output_0 : Long(8, strides=[1], device=cpu) = onnx::Constant[value= 0  0  0  0  0  0  0  0 [ CPULongType{8} ], onnx_name="/w1/Constant_40"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Pad_1_output_0 : Float(1, 2, 7, 7, strides=[98, 49, 7, 1], device=cpu) = onnx::Pad[onnx_name="/w1/Pad_1"](%/w1/Concat_1_output_0, %/w1/Constant_40_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Gather_4_output_0 : Float(1, 2, 3, 5, 7, strides=[210, 105, 35, 7, 1], device=cpu) = onnx::Gather[axis=2, onnx_name="/w1/Gather_4"](%/w1/Pad_1_output_0, %/w1/Add_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Gather_5_output_0 : Float(1, 2, 3, 5, 3, 5, strides=[450, 225, 75, 15, 5, 1], device=cpu) = onnx::Gather[axis=4, onnx_name="/w1/Gather_5"](%/w1/Gather_4_output_0, %/w1/Add_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Transpose_1_output_0 : Float(1, 2, 3, 3, 5, 5, strides=[450, 225, 75, 25, 5, 1], device=cpu) = onnx::Transpose[perm=[0, 1, 2, 4, 3, 5], onnx_name="/w1/Transpose_1"](%/w1/Gather_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Reshape_2_output_0 : Float(1, 18, 25, strides=[450, 25, 1], requires_grad=0, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w1/Reshape_2"](%/w1/Transpose_1_output_0, %/w1/Concat_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_41_output_0 : Long(4, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value=  1   2   9  25 [ CPULongType{4} ], onnx_name="/w1/Constant_41"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Reshape_3_output_0 : Float(1, 2, 9, 25, strides=[450, 225, 25, 1], requires_grad=0, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w1/Reshape_3"](%/w1/Reshape_2_output_0, %/w1/Constant_41_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Constant_42_output_0 : Long(4, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value=  1   1   9  25 [ CPULongType{4} ], onnx_name="/w1/Constant_42"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Reshape_4_output_0 : Float(1, 1, 9, 25, strides=[225, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w1/Reshape_4"](%/atten_conv1/sigmoid/Sigmoid_output_0, %/w1/Constant_42_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Mul_1_output_0 : Float(1, 2, 9, 25, strides=[450, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Mul[onnx_name="/w1/Mul_1"](%/w1/Reshape_3_output_0, %/w1/Reshape_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Constant_43_output_0 : Long(3, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value=  1  18  25 [ CPULongType{3} ], onnx_name="/w1/Constant_43"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Reshape_5_output_0 : Float(1, 18, 25, strides=[450, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w1/Reshape_5"](%/w1/Mul_1_output_0, %/w1/Constant_43_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Transpose_2_output_0 : Float(1, 25, 18, strides=[450, 1, 25], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/w1/Transpose_2"](%/w1/Reshape_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/w1/MatMul_output_0 : Float(1, 25, 256, strides=[6400, 256, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/w1/MatMul"](%/w1/Transpose_2_output_0, %onnx::MatMul_2036), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/w1/Transpose_3_output_0 : Float(1, 256, 25, strides=[6400, 1, 256], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/w1/Transpose_3"](%/w1/MatMul_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %onnx::Col2Im_299 : Long(2, strides=[1], device=cpu) = onnx::Constant[value= 5  5 [ CPULongType{2} ]]()
  %/w1/Col2Im_output_0 : Float(1, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Col2Im[dilations=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/w1/Col2Im"](%/w1/Transpose_3_output_0, %onnx::Col2Im_299, %onnx::Col2Im_139), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4874:0
  %/w1/Add_4_output_0 : Float(1, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/w1/Add_4"](%/w1/Col2Im_output_0, %onnx::Add_2037), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:170:0
  %/w1/Shape_4_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w1/Shape_4"](%/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w1/Constant_44_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_44"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w1/Gather_6_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w1/Gather_6"](%/w1/Shape_4_output_0, %/w1/Constant_44_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w1/Shape_5_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w1/Shape_5"](%/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w1/Constant_45_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w1/Constant_45"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w1/Gather_7_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w1/Gather_7"](%/w1/Shape_5_output_0, %/w1/Constant_45_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w1/Shape_6_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w1/Shape_6"](%/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w1/Constant_46_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/w1/Constant_46"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w1/Gather_8_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w1/Gather_8"](%/w1/Shape_6_output_0, %/w1/Constant_46_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w1/Shape_7_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w1/Shape_7"](%/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w1/Constant_47_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/w1/Constant_47"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w1/Gather_9_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w1/Gather_9"](%/w1/Shape_7_output_0, %/w1/Constant_47_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w1/Constant_48_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/w1/Constant_48"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/w1/Sub_2_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/w1/Sub_2"](%/w1/Gather_8_output_0, %/w1/Constant_48_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/w1/Constant_49_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/w1/Constant_49"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/w1/Add_5_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/w1/Add_5"](%/w1/Sub_2_output_0, %/w1/Constant_49_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/w1/Constant_50_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/w1/Constant_50"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/w1/Sub_3_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/w1/Sub_3"](%/w1/Gather_9_output_0, %/w1/Constant_50_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/w1/Constant_51_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/w1/Constant_51"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/w1/Add_6_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/w1/Add_6"](%/w1/Sub_3_output_0, %/w1/Constant_51_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/w1/Shape_8_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w1/Shape_8"](%/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_52_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/w1/Constant_52"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Gather_10_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w1/Gather_10"](%/w1/Shape_8_output_0, %/w1/Constant_52_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Shape_9_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w1/Shape_9"](%/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_53_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/w1/Constant_53"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Gather_11_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w1/Gather_11"](%/w1/Shape_9_output_0, %/w1/Constant_53_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_54_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_54"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Add_7_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/w1/Add_7"](%/w1/Gather_10_output_0, %/w1/Constant_54_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_55_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/w1/Constant_55"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Sub_4_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/w1/Sub_4"](%/w1/Add_7_output_0, %/w1/Constant_55_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_56_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_56"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_57_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w1/Constant_57"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Range_2_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/w1/Range_2"](%/w1/Constant_56_output_0, %/w1/Sub_4_output_0, %/w1/Constant_57_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_58_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_58"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Unsqueeze_4_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_4"](%/w1/Range_2_output_0, %/w1/Constant_58_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_59_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/w1/Constant_59"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Add_8_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/w1/Add_8"](%/w1/Unsqueeze_4_output_0, %/w1/Constant_59_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_60_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_60"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Add_9_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/w1/Add_9"](%/w1/Gather_11_output_0, %/w1/Constant_60_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_61_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/w1/Constant_61"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Sub_5_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/w1/Sub_5"](%/w1/Add_9_output_0, %/w1/Constant_61_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_62_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_62"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_63_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w1/Constant_63"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Range_3_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/w1/Range_3"](%/w1/Constant_62_output_0, %/w1/Sub_5_output_0, %/w1/Constant_63_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_64_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_64"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Unsqueeze_5_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_5"](%/w1/Range_3_output_0, %/w1/Constant_64_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_65_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/w1/Constant_65"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Add_10_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/w1/Add_10"](%/w1/Unsqueeze_5_output_0, %/w1/Constant_65_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Shape_10_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w1/Shape_10"](%/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_66_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_66"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Gather_12_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w1/Gather_12"](%/w1/Shape_10_output_0, %/w1/Constant_66_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Shape_11_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w1/Shape_11"](%/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_67_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w1/Constant_67"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Gather_13_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w1/Gather_13"](%/w1/Shape_11_output_0, %/w1/Constant_67_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_68_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/w1/Constant_68"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Mul_2_output_0 : Long(device=cpu) = onnx::Mul[onnx_name="/w1/Mul_2"](%/w1/Gather_13_output_0, %/w1/Constant_68_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_69_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_69"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Unsqueeze_6_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_6"](%/w1/Gather_12_output_0, %/w1/Constant_69_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_70_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w1/Constant_70"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Unsqueeze_7_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_7"](%/w1/Mul_2_output_0, %/w1/Constant_70_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_71_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/w1/Constant_71"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Concat_4_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w1/Concat_4"](%/w1/Unsqueeze_6_output_0, %/w1/Unsqueeze_7_output_0, %/w1/Constant_71_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Constant_72_output_0 : Long(8, strides=[1], device=cpu) = onnx::Constant[value= 0  0  0  0  0  0  0  0 [ CPULongType{8} ], onnx_name="/w1/Constant_72"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Pad_2_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pad[onnx_name="/w1/Pad_2"](%/w1/Pad_output_0, %/w1/Constant_72_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Gather_14_output_0 : Float(*, *, 3, *, *, device=cpu) = onnx::Gather[axis=2, onnx_name="/w1/Gather_14"](%/w1/Pad_2_output_0, %/w1/Add_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Gather_15_output_0 : Float(*, *, 3, *, 3, *, device=cpu) = onnx::Gather[axis=4, onnx_name="/w1/Gather_15"](%/w1/Gather_14_output_0, %/w1/Add_10_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Transpose_4_output_0 : Float(*, *, 3, 3, *, *, device=cpu) = onnx::Transpose[perm=[0, 1, 2, 4, 3, 5], onnx_name="/w1/Transpose_4"](%/w1/Gather_15_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Reshape_6_output_0 : Float(*, *, *, strides=[450, 25, 1], requires_grad=0, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w1/Reshape_6"](%/w1/Transpose_4_output_0, %/w1/Concat_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w1/Mul_3_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/w1/Mul_3"](%/w1/Add_5_output_0, %/w1/Add_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_377 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w1/Unsqueeze_8_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_8"](%/w1/Gather_6_output_0, %onnx::Unsqueeze_377), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_379 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w1/Unsqueeze_9_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_9"](%/w1/Gather_7_output_0, %onnx::Unsqueeze_379), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/w1/Constant_73_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/w1/Constant_73"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_383 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w1/Unsqueeze_10_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_10"](%/w1/Mul_3_output_0, %onnx::Unsqueeze_383), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/w1/Concat_5_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w1/Concat_5"](%/w1/Unsqueeze_8_output_0, %/w1/Unsqueeze_9_output_0, %/w1/Constant_73_output_0, %/w1/Unsqueeze_10_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Reshape_7_output_0 : Float(*, *, *, *, strides=[450, 225, 25, 1], requires_grad=0, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w1/Reshape_7"](%/w1/Reshape_6_output_0, %/w1/Concat_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_387 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w1/Unsqueeze_11_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_11"](%/w1/Gather_6_output_0, %onnx::Unsqueeze_387), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/w1/Constant_74_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/w1/Constant_74"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/w1/Constant_75_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/w1/Constant_75"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_393 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w1/Unsqueeze_12_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_12"](%/w1/Mul_3_output_0, %onnx::Unsqueeze_393), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/w1/Concat_6_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w1/Concat_6"](%/w1/Unsqueeze_11_output_0, %/w1/Constant_74_output_0, %/w1/Constant_75_output_0, %/w1/Unsqueeze_12_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Reshape_8_output_0 : Float(*, *, *, *, strides=[225, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w1/Reshape_8"](%/atten_conv1/sigmoid/Sigmoid_output_0, %/w1/Concat_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Mul_4_output_0 : Float(*, *, *, *, strides=[450, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Mul[onnx_name="/w1/Mul_4"](%/w1/Reshape_7_output_0, %/w1/Reshape_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Constant_76_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/w1/Constant_76"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Mul_5_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/w1/Mul_5"](%/w1/Gather_7_output_0, %/w1/Constant_76_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Constant_77_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/w1/Constant_77"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Mul_6_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/w1/Mul_6"](%/w1/Mul_5_output_0, %/w1/Constant_77_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_402 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w1/Unsqueeze_13_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_13"](%/w1/Gather_6_output_0, %onnx::Unsqueeze_402), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_404 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w1/Unsqueeze_14_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_14"](%/w1/Mul_6_output_0, %onnx::Unsqueeze_404), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_406 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w1/Unsqueeze_15_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w1/Unsqueeze_15"](%/w1/Mul_3_output_0, %onnx::Unsqueeze_406), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/w1/Concat_7_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w1/Concat_7"](%/w1/Unsqueeze_13_output_0, %/w1/Unsqueeze_14_output_0, %/w1/Unsqueeze_15_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Reshape_9_output_0 : Float(*, *, *, strides=[450, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w1/Reshape_9"](%/w1/Mul_4_output_0, %/w1/Concat_7_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w1/Transpose_5_output_0 : Float(*, *, *, strides=[450, 1, 25], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/w1/Transpose_5"](%/w1/Reshape_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/w1/MatMul_1_output_0 : Float(*, *, 256, strides=[6400, 256, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/w1/MatMul_1"](%/w1/Transpose_5_output_0, %onnx::MatMul_2047), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/w1/Transpose_6_output_0 : Float(*, 256, *, strides=[6400, 1, 256], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/w1/Transpose_6"](%/w1/MatMul_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/w1/Col2Im_1_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Col2Im[dilations=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/w1/Col2Im_1"](%/w1/Transpose_6_output_0, %onnx::Col2Im_299, %onnx::Col2Im_139), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4874:0
  %/w1/Add_11_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/w1/Add_11"](%/w1/Col2Im_1_output_0, %onnx::Add_2048), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:170:0
  %/w1/Add_12_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/w1/Add_12"](%/w1/Add_4_output_0, %/w1/Add_11_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:187:0
  %/batch_norm1/BatchNormalization_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::BatchNormalization[epsilon=1.0000000000000001e-05, momentum=0.90000000000000002, training_mode=0, onnx_name="/batch_norm1/BatchNormalization"](%/w1/Add_12_output_0, %batch_norm1.weight, %batch_norm1.bias, %batch_norm1.running_mean, %batch_norm1.running_var), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/torch.nn.modules.batchnorm.BatchNorm2d::batch_norm1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:2512:0
  %/relu/Relu_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/relu/Relu"](%/batch_norm1/BatchNormalization_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/torch.nn.modules.activation.ReLU::relu # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1498:0
  %/linear_stages.0/atten_conv1/avgpool/GlobalAveragePool_output_0 : Float(*, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=1, device=cpu) = onnx::GlobalAveragePool[onnx_name="/linear_stages.0/atten_conv1/avgpool/GlobalAveragePool"](%/relu/Relu_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.pooling.AdaptiveAvgPool2d::avgpool # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1260:0
  %/linear_stages.0/atten_conv1/fc/Conv_output_0 : Float(*, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.0/atten_conv1/fc/Conv"](%/linear_stages.0/atten_conv1/avgpool/GlobalAveragePool_output_0, %onnx::Conv_1978, %onnx::Conv_1979), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.conv.Conv2d::fc # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\conv.py:454:0
  %/linear_stages.0/atten_conv1/relu/Relu_output_0 : Float(*, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/linear_stages.0/atten_conv1/relu/Relu"](%/linear_stages.0/atten_conv1/fc/Conv_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.activation.ReLU::relu # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1498:0
  %/linear_stages.0/atten_conv1/position_fc/Conv_output_0 : Float(*, 225, 1, 1, strides=[225, 1, 1, 1], requires_grad=0, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.0/atten_conv1/position_fc/Conv"](%/linear_stages.0/atten_conv1/relu/Relu_output_0, %linear_stages.0.atten_conv1.position_fc.weight, %linear_stages.0.atten_conv1.position_fc.bias), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.conv.Conv2d::position_fc # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\conv.py:454:0
  %/linear_stages.0/atten_conv1/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/atten_conv1/Shape"](%/linear_stages.0/atten_conv1/relu/Relu_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.0/atten_conv1/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/atten_conv1/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.0/atten_conv1/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/atten_conv1/Gather"](%/linear_stages.0/atten_conv1/Shape_output_0, %/linear_stages.0/atten_conv1/Constant_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %onnx::Unsqueeze_436 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/atten_conv1/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/atten_conv1/Unsqueeze"](%/linear_stages.0/atten_conv1/Gather_output_0, %onnx::Unsqueeze_436), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1
  %/linear_stages.0/atten_conv1/Constant_1_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/atten_conv1/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1
  %/linear_stages.0/atten_conv1/Constant_2_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={5}, onnx_name="/linear_stages.0/atten_conv1/Constant_2"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1
  %/linear_stages.0/atten_conv1/Constant_3_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={5}, onnx_name="/linear_stages.0/atten_conv1/Constant_3"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1
  %/linear_stages.0/atten_conv1/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/atten_conv1/Concat"](%/linear_stages.0/atten_conv1/Unsqueeze_output_0, %/linear_stages.0/atten_conv1/Constant_1_output_0, %/linear_stages.0/atten_conv1/Constant_2_output_0, %/linear_stages.0/atten_conv1/Constant_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.0/atten_conv1/Reshape_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/atten_conv1/Reshape"](%/linear_stages.0/atten_conv1/position_fc/Conv_output_0, %/linear_stages.0/atten_conv1/Concat_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.0/atten_conv1/Constant_4_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={30}, onnx_name="/linear_stages.0/atten_conv1/Constant_4"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:235:0
  %/linear_stages.0/atten_conv1/Div_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Div[onnx_name="/linear_stages.0/atten_conv1/Div"](%/linear_stages.0/atten_conv1/Reshape_output_0, %/linear_stages.0/atten_conv1/Constant_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:235:0
  %/linear_stages.0/atten_conv1/sigmoid/Sigmoid_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Sigmoid[onnx_name="/linear_stages.0/atten_conv1/sigmoid/Sigmoid"](%/linear_stages.0/atten_conv1/Div_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.activation.Sigmoid::sigmoid # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\activation.py:301:0
  %/linear_stages.0/w1/Constant_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w1/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w1/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={9223372036854775807}, onnx_name="/linear_stages.0/w1/Constant_2"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Slice_output_0 : Float(*, 256, 1, 5, device=cpu) = onnx::Slice[onnx_name="/linear_stages.0/w1/Slice"](%/relu/Relu_output_0, %/linear_stages.0/w1/Constant_1_output_0, %/linear_stages.0/w1/Constant_2_output_0, %/linear_stages.0/w1/Constant_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_3_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w1/Constant_3"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_4_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_4"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_5_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_5"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Slice_1_output_0 : Float(*, 256, 1, 5, device=cpu) = onnx::Slice[onnx_name="/linear_stages.0/w1/Slice_1"](%/relu/Relu_output_0, %/linear_stages.0/w1/Constant_4_output_0, %/linear_stages.0/w1/Constant_5_output_0, %/linear_stages.0/w1/Constant_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Concat_output_0 : Float(*, 256, 7, 5, device=cpu) = onnx::Concat[axis=2, onnx_name="/linear_stages.0/w1/Concat"](%/linear_stages.0/w1/Slice_output_0, %/relu/Relu_output_0, %/linear_stages.0/w1/Slice_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_6_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_6"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_7_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w1/Constant_7"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_8_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={9223372036854775807}, onnx_name="/linear_stages.0/w1/Constant_8"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Slice_2_output_0 : Float(*, 256, 7, 1, device=cpu) = onnx::Slice[onnx_name="/linear_stages.0/w1/Slice_2"](%/linear_stages.0/w1/Concat_output_0, %/linear_stages.0/w1/Constant_7_output_0, %/linear_stages.0/w1/Constant_8_output_0, %/linear_stages.0/w1/Constant_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_9_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_9"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_10_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_10"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_11_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_11"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Slice_3_output_0 : Float(*, 256, 7, 1, device=cpu) = onnx::Slice[onnx_name="/linear_stages.0/w1/Slice_3"](%/linear_stages.0/w1/Concat_output_0, %/linear_stages.0/w1/Constant_10_output_0, %/linear_stages.0/w1/Constant_11_output_0, %/linear_stages.0/w1/Constant_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Concat_1_output_0 : Float(*, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=1, device=cpu) = onnx::Concat[axis=3, onnx_name="/linear_stages.0/w1/Concat_1"](%/linear_stages.0/w1/Slice_2_output_0, %/linear_stages.0/w1/Concat_output_0, %/linear_stages.0/w1/Slice_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_12_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={4}, onnx_name="/linear_stages.0/w1/Constant_12"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_13_output_0 : Long(4, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value= 1  1  1  1 [ CPULongType{4} ], onnx_name="/linear_stages.0/w1/Constant_13"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/ConstantOfShape_output_0 : Long(4, strides=[1], device=cpu) = onnx::ConstantOfShape[value={0}, onnx_name="/linear_stages.0/w1/ConstantOfShape"](%/linear_stages.0/w1/Constant_12_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Concat_2_output_0 : Long(8, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w1/Concat_2"](%/linear_stages.0/w1/Constant_13_output_0, %/linear_stages.0/w1/ConstantOfShape_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_14_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=-1  2 [ CPULongType{2} ], onnx_name="/linear_stages.0/w1/Constant_14"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Reshape_output_0 : Long(4, 2, strides=[2, 1], device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w1/Reshape"](%/linear_stages.0/w1/Concat_2_output_0, %/linear_stages.0/w1/Constant_14_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_15_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_15"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_16_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w1/Constant_16"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_17_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-9223372036854775807}, onnx_name="/linear_stages.0/w1/Constant_17"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_18_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w1/Constant_18"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Slice_4_output_0 : Long(4, 2, strides=[2, 1], device=cpu) = onnx::Slice[onnx_name="/linear_stages.0/w1/Slice_4"](%/linear_stages.0/w1/Reshape_output_0, %/linear_stages.0/w1/Constant_16_output_0, %/linear_stages.0/w1/Constant_17_output_0, %/linear_stages.0/w1/Constant_15_output_0, %/linear_stages.0/w1/Constant_18_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Transpose_output_0 : Long(2, 4, strides=[4, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/linear_stages.0/w1/Transpose"](%/linear_stages.0/w1/Slice_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Constant_19_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w1/Constant_19"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Reshape_1_output_0 : Long(8, strides=[1], device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w1/Reshape_1"](%/linear_stages.0/w1/Transpose_output_0, %/linear_stages.0/w1/Constant_19_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Cast_output_0 : Long(8, strides=[1], device=cpu) = onnx::Cast[to=7, onnx_name="/linear_stages.0/w1/Cast"](%/linear_stages.0/w1/Reshape_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Pad_output_0 : Float(*, *, *, *, strides=[12544, 49, 7, 1], requires_grad=1, device=cpu) = onnx::Pad[mode="edge", onnx_name="/linear_stages.0/w1/Pad"](%/relu/Relu_output_0, %/linear_stages.0/w1/Cast_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w1/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape"](%/linear_stages.0/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Constant_20_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_20"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather"](%/linear_stages.0/w1/Shape_output_0, %/linear_stages.0/w1/Constant_20_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_1"](%/linear_stages.0/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Constant_21_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_21"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_1"](%/linear_stages.0/w1/Shape_1_output_0, %/linear_stages.0/w1/Constant_21_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_2"](%/linear_stages.0/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Constant_22_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w1/Constant_22"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_2"](%/linear_stages.0/w1/Shape_2_output_0, %/linear_stages.0/w1/Constant_22_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Shape_3_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_3"](%/linear_stages.0/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Constant_23_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_23"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Gather_3_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_3"](%/linear_stages.0/w1/Shape_3_output_0, %/linear_stages.0/w1/Constant_23_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Constant_24_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_24"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w1/Sub_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w1/Sub"](%/linear_stages.0/w1/Gather_2_output_0, %/linear_stages.0/w1/Constant_24_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w1/Constant_25_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_25"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w1/Add_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add"](%/linear_stages.0/w1/Sub_output_0, %/linear_stages.0/w1/Constant_25_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w1/Constant_26_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_26"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w1/Sub_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w1/Sub_1"](%/linear_stages.0/w1/Gather_3_output_0, %/linear_stages.0/w1/Constant_26_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w1/Constant_27_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_27"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w1/Add_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_1"](%/linear_stages.0/w1/Sub_1_output_0, %/linear_stages.0/w1/Constant_27_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w1/Shape_4_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_4"](%/linear_stages.0/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_28_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w1/Constant_28"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Gather_4_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_4"](%/linear_stages.0/w1/Shape_4_output_0, %/linear_stages.0/w1/Constant_28_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Shape_5_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_5"](%/linear_stages.0/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_29_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_29"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Gather_5_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_5"](%/linear_stages.0/w1/Shape_5_output_0, %/linear_stages.0/w1/Constant_29_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_30_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_30"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Add_2_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_2"](%/linear_stages.0/w1/Gather_4_output_0, %/linear_stages.0/w1/Constant_30_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_31_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w1/Constant_31"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Sub_2_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w1/Sub_2"](%/linear_stages.0/w1/Add_2_output_0, %/linear_stages.0/w1/Constant_31_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_32_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_32"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_33_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_33"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Range_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.0/w1/Range"](%/linear_stages.0/w1/Constant_32_output_0, %/linear_stages.0/w1/Sub_2_output_0, %/linear_stages.0/w1/Constant_33_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_34_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_34"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Unsqueeze_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze"](%/linear_stages.0/w1/Range_output_0, %/linear_stages.0/w1/Constant_34_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_35_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.0/w1/Constant_35"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Add_3_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_3"](%/linear_stages.0/w1/Unsqueeze_output_0, %/linear_stages.0/w1/Constant_35_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_36_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_36"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Add_4_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_4"](%/linear_stages.0/w1/Gather_5_output_0, %/linear_stages.0/w1/Constant_36_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_37_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w1/Constant_37"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Sub_3_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w1/Sub_3"](%/linear_stages.0/w1/Add_4_output_0, %/linear_stages.0/w1/Constant_37_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_38_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_38"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_39_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_39"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Range_1_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.0/w1/Range_1"](%/linear_stages.0/w1/Constant_38_output_0, %/linear_stages.0/w1/Sub_3_output_0, %/linear_stages.0/w1/Constant_39_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_40_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_40"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Unsqueeze_1_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_1"](%/linear_stages.0/w1/Range_1_output_0, %/linear_stages.0/w1/Constant_40_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_41_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.0/w1/Constant_41"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Add_5_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_5"](%/linear_stages.0/w1/Unsqueeze_1_output_0, %/linear_stages.0/w1/Constant_41_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Shape_6_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_6"](%/linear_stages.0/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_42_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_42"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Gather_6_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_6"](%/linear_stages.0/w1/Shape_6_output_0, %/linear_stages.0/w1/Constant_42_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Shape_7_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_7"](%/linear_stages.0/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_43_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_43"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Gather_7_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_7"](%/linear_stages.0/w1/Shape_7_output_0, %/linear_stages.0/w1/Constant_43_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_44_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/w1/Constant_44"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Mul_output_0 : Long(device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w1/Mul"](%/linear_stages.0/w1/Gather_7_output_0, %/linear_stages.0/w1/Constant_44_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_45_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_45"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_2"](%/linear_stages.0/w1/Gather_6_output_0, %/linear_stages.0/w1/Constant_45_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_46_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_46"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Unsqueeze_3_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_3"](%/linear_stages.0/w1/Mul_output_0, %/linear_stages.0/w1/Constant_46_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_47_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w1/Constant_47"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Concat_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w1/Concat_3"](%/linear_stages.0/w1/Unsqueeze_2_output_0, %/linear_stages.0/w1/Unsqueeze_3_output_0, %/linear_stages.0/w1/Constant_47_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_48_output_0 : Long(8, strides=[1], device=cpu) = onnx::Constant[value= 0  0  0  0  0  0  0  0 [ CPULongType{8} ], onnx_name="/linear_stages.0/w1/Constant_48"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Pad_1_output_0 : Float(*, 256, 7, 7, device=cpu) = onnx::Pad[onnx_name="/linear_stages.0/w1/Pad_1"](%/linear_stages.0/w1/Concat_1_output_0, %/linear_stages.0/w1/Constant_48_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Gather_8_output_0 : Float(*, 256, 3, *, 7, device=cpu) = onnx::Gather[axis=2, onnx_name="/linear_stages.0/w1/Gather_8"](%/linear_stages.0/w1/Pad_1_output_0, %/linear_stages.0/w1/Add_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Gather_9_output_0 : Float(*, 256, 3, *, 3, *, device=cpu) = onnx::Gather[axis=4, onnx_name="/linear_stages.0/w1/Gather_9"](%/linear_stages.0/w1/Gather_8_output_0, %/linear_stages.0/w1/Add_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Transpose_1_output_0 : Float(*, 256, 3, 3, *, *, device=cpu) = onnx::Transpose[perm=[0, 1, 2, 4, 3, 5], onnx_name="/linear_stages.0/w1/Transpose_1"](%/linear_stages.0/w1/Gather_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Reshape_2_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w1/Reshape_2"](%/linear_stages.0/w1/Transpose_1_output_0, %/linear_stages.0/w1/Concat_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Mul_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w1/Mul_1"](%/linear_stages.0/w1/Add_output_0, %/linear_stages.0/w1/Add_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_563 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_4_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_4"](%/linear_stages.0/w1/Gather_output_0, %onnx::Unsqueeze_563), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_565 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_5_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_5"](%/linear_stages.0/w1/Gather_1_output_0, %onnx::Unsqueeze_565), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.0/w1/Constant_49_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/w1/Constant_49"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_569 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_6_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_6"](%/linear_stages.0/w1/Mul_1_output_0, %onnx::Unsqueeze_569), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.0/w1/Concat_4_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w1/Concat_4"](%/linear_stages.0/w1/Unsqueeze_4_output_0, %/linear_stages.0/w1/Unsqueeze_5_output_0, %/linear_stages.0/w1/Constant_49_output_0, %/linear_stages.0/w1/Unsqueeze_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Reshape_3_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w1/Reshape_3"](%/linear_stages.0/w1/Reshape_2_output_0, %/linear_stages.0/w1/Concat_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_573 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_7_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_7"](%/linear_stages.0/w1/Gather_output_0, %onnx::Unsqueeze_573), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.0/w1/Constant_50_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_50"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.0/w1/Constant_51_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/w1/Constant_51"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_579 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_8_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_8"](%/linear_stages.0/w1/Mul_1_output_0, %onnx::Unsqueeze_579), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.0/w1/Concat_5_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w1/Concat_5"](%/linear_stages.0/w1/Unsqueeze_7_output_0, %/linear_stages.0/w1/Constant_50_output_0, %/linear_stages.0/w1/Constant_51_output_0, %/linear_stages.0/w1/Unsqueeze_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Reshape_4_output_0 : Float(*, *, *, *, strides=[225, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w1/Reshape_4"](%/linear_stages.0/atten_conv1/sigmoid/Sigmoid_output_0, %/linear_stages.0/w1/Concat_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Mul_2_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w1/Mul_2"](%/linear_stages.0/w1/Reshape_3_output_0, %/linear_stages.0/w1/Reshape_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Constant_52_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_52"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Mul_3_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w1/Mul_3"](%/linear_stages.0/w1/Gather_1_output_0, %/linear_stages.0/w1/Constant_52_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Constant_53_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_53"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Mul_4_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w1/Mul_4"](%/linear_stages.0/w1/Mul_3_output_0, %/linear_stages.0/w1/Constant_53_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_588 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_9_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_9"](%/linear_stages.0/w1/Gather_output_0, %onnx::Unsqueeze_588), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_590 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_10_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_10"](%/linear_stages.0/w1/Mul_4_output_0, %onnx::Unsqueeze_590), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_592 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_11_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_11"](%/linear_stages.0/w1/Mul_1_output_0, %onnx::Unsqueeze_592), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.0/w1/Concat_6_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w1/Concat_6"](%/linear_stages.0/w1/Unsqueeze_9_output_0, %/linear_stages.0/w1/Unsqueeze_10_output_0, %/linear_stages.0/w1/Unsqueeze_11_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Reshape_5_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w1/Reshape_5"](%/linear_stages.0/w1/Mul_2_output_0, %/linear_stages.0/w1/Concat_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Transpose_2_output_0 : Float(*, *, *, strides=[57600, 1, 25], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.0/w1/Transpose_2"](%/linear_stages.0/w1/Reshape_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.0/w1/MatMul_output_0 : Float(*, *, 256, strides=[6400, 256, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/linear_stages.0/w1/MatMul"](%/linear_stages.0/w1/Transpose_2_output_0, %onnx::MatMul_2066), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.0/w1/Transpose_3_output_0 : Float(*, 256, *, strides=[6400, 1, 256], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.0/w1/Transpose_3"](%/linear_stages.0/w1/MatMul_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.0/w1/Col2Im_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Col2Im[dilations=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.0/w1/Col2Im"](%/linear_stages.0/w1/Transpose_3_output_0, %onnx::Col2Im_299, %onnx::Col2Im_139), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4874:0
  %/linear_stages.0/w1/Add_6_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_6"](%/linear_stages.0/w1/Col2Im_output_0, %onnx::Add_2067), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:170:0
  %/linear_stages.0/w1/Shape_8_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_8"](%/linear_stages.0/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Constant_54_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_54"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Gather_10_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_10"](%/linear_stages.0/w1/Shape_8_output_0, %/linear_stages.0/w1/Constant_54_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Shape_9_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_9"](%/linear_stages.0/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Constant_55_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_55"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Gather_11_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_11"](%/linear_stages.0/w1/Shape_9_output_0, %/linear_stages.0/w1/Constant_55_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Shape_10_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_10"](%/linear_stages.0/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Constant_56_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w1/Constant_56"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Gather_12_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_12"](%/linear_stages.0/w1/Shape_10_output_0, %/linear_stages.0/w1/Constant_56_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Shape_11_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_11"](%/linear_stages.0/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Constant_57_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_57"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Gather_13_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_13"](%/linear_stages.0/w1/Shape_11_output_0, %/linear_stages.0/w1/Constant_57_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w1/Constant_58_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_58"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w1/Sub_4_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w1/Sub_4"](%/linear_stages.0/w1/Gather_12_output_0, %/linear_stages.0/w1/Constant_58_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w1/Constant_59_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_59"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w1/Add_7_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_7"](%/linear_stages.0/w1/Sub_4_output_0, %/linear_stages.0/w1/Constant_59_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w1/Constant_60_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_60"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w1/Sub_5_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w1/Sub_5"](%/linear_stages.0/w1/Gather_13_output_0, %/linear_stages.0/w1/Constant_60_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w1/Constant_61_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_61"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w1/Add_8_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_8"](%/linear_stages.0/w1/Sub_5_output_0, %/linear_stages.0/w1/Constant_61_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w1/Shape_12_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_12"](%/linear_stages.0/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_62_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w1/Constant_62"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Gather_14_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_14"](%/linear_stages.0/w1/Shape_12_output_0, %/linear_stages.0/w1/Constant_62_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Shape_13_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_13"](%/linear_stages.0/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_63_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_63"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Gather_15_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_15"](%/linear_stages.0/w1/Shape_13_output_0, %/linear_stages.0/w1/Constant_63_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_64_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_64"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Add_9_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_9"](%/linear_stages.0/w1/Gather_14_output_0, %/linear_stages.0/w1/Constant_64_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_65_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w1/Constant_65"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Sub_6_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w1/Sub_6"](%/linear_stages.0/w1/Add_9_output_0, %/linear_stages.0/w1/Constant_65_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_66_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_66"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_67_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_67"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Range_2_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.0/w1/Range_2"](%/linear_stages.0/w1/Constant_66_output_0, %/linear_stages.0/w1/Sub_6_output_0, %/linear_stages.0/w1/Constant_67_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_68_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_68"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Unsqueeze_12_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_12"](%/linear_stages.0/w1/Range_2_output_0, %/linear_stages.0/w1/Constant_68_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_69_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.0/w1/Constant_69"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Add_10_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_10"](%/linear_stages.0/w1/Unsqueeze_12_output_0, %/linear_stages.0/w1/Constant_69_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_70_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_70"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Add_11_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_11"](%/linear_stages.0/w1/Gather_15_output_0, %/linear_stages.0/w1/Constant_70_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_71_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w1/Constant_71"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Sub_7_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w1/Sub_7"](%/linear_stages.0/w1/Add_11_output_0, %/linear_stages.0/w1/Constant_71_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_72_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_72"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_73_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_73"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Range_3_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.0/w1/Range_3"](%/linear_stages.0/w1/Constant_72_output_0, %/linear_stages.0/w1/Sub_7_output_0, %/linear_stages.0/w1/Constant_73_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_74_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_74"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Unsqueeze_13_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_13"](%/linear_stages.0/w1/Range_3_output_0, %/linear_stages.0/w1/Constant_74_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_75_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.0/w1/Constant_75"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Add_12_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_12"](%/linear_stages.0/w1/Unsqueeze_13_output_0, %/linear_stages.0/w1/Constant_75_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Shape_14_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_14"](%/linear_stages.0/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_76_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_76"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Gather_16_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_16"](%/linear_stages.0/w1/Shape_14_output_0, %/linear_stages.0/w1/Constant_76_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Shape_15_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w1/Shape_15"](%/linear_stages.0/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_77_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_77"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Gather_17_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w1/Gather_17"](%/linear_stages.0/w1/Shape_15_output_0, %/linear_stages.0/w1/Constant_77_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_78_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/w1/Constant_78"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Mul_5_output_0 : Long(device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w1/Mul_5"](%/linear_stages.0/w1/Gather_17_output_0, %/linear_stages.0/w1/Constant_78_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_79_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_79"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Unsqueeze_14_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_14"](%/linear_stages.0/w1/Gather_16_output_0, %/linear_stages.0/w1/Constant_79_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_80_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w1/Constant_80"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Unsqueeze_15_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_15"](%/linear_stages.0/w1/Mul_5_output_0, %/linear_stages.0/w1/Constant_80_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_81_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w1/Constant_81"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Concat_7_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w1/Concat_7"](%/linear_stages.0/w1/Unsqueeze_14_output_0, %/linear_stages.0/w1/Unsqueeze_15_output_0, %/linear_stages.0/w1/Constant_81_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Constant_82_output_0 : Long(8, strides=[1], device=cpu) = onnx::Constant[value= 0  0  0  0  0  0  0  0 [ CPULongType{8} ], onnx_name="/linear_stages.0/w1/Constant_82"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Pad_2_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pad[onnx_name="/linear_stages.0/w1/Pad_2"](%/linear_stages.0/w1/Pad_output_0, %/linear_stages.0/w1/Constant_82_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Gather_18_output_0 : Float(*, *, 3, *, *, device=cpu) = onnx::Gather[axis=2, onnx_name="/linear_stages.0/w1/Gather_18"](%/linear_stages.0/w1/Pad_2_output_0, %/linear_stages.0/w1/Add_10_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Gather_19_output_0 : Float(*, *, 3, *, 3, *, device=cpu) = onnx::Gather[axis=4, onnx_name="/linear_stages.0/w1/Gather_19"](%/linear_stages.0/w1/Gather_18_output_0, %/linear_stages.0/w1/Add_12_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Transpose_4_output_0 : Float(*, *, 3, 3, *, *, device=cpu) = onnx::Transpose[perm=[0, 1, 2, 4, 3, 5], onnx_name="/linear_stages.0/w1/Transpose_4"](%/linear_stages.0/w1/Gather_19_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Reshape_6_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w1/Reshape_6"](%/linear_stages.0/w1/Transpose_4_output_0, %/linear_stages.0/w1/Concat_7_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w1/Mul_6_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w1/Mul_6"](%/linear_stages.0/w1/Add_7_output_0, %/linear_stages.0/w1/Add_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_684 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_16_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_16"](%/linear_stages.0/w1/Gather_10_output_0, %onnx::Unsqueeze_684), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_686 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_17_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_17"](%/linear_stages.0/w1/Gather_11_output_0, %onnx::Unsqueeze_686), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.0/w1/Constant_83_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/w1/Constant_83"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_690 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_18_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_18"](%/linear_stages.0/w1/Mul_6_output_0, %onnx::Unsqueeze_690), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.0/w1/Concat_8_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w1/Concat_8"](%/linear_stages.0/w1/Unsqueeze_16_output_0, %/linear_stages.0/w1/Unsqueeze_17_output_0, %/linear_stages.0/w1/Constant_83_output_0, %/linear_stages.0/w1/Unsqueeze_18_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Reshape_7_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w1/Reshape_7"](%/linear_stages.0/w1/Reshape_6_output_0, %/linear_stages.0/w1/Concat_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_694 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_19_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_19"](%/linear_stages.0/w1/Gather_10_output_0, %onnx::Unsqueeze_694), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.0/w1/Constant_84_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w1/Constant_84"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.0/w1/Constant_85_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/w1/Constant_85"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_700 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_20_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_20"](%/linear_stages.0/w1/Mul_6_output_0, %onnx::Unsqueeze_700), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.0/w1/Concat_9_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w1/Concat_9"](%/linear_stages.0/w1/Unsqueeze_19_output_0, %/linear_stages.0/w1/Constant_84_output_0, %/linear_stages.0/w1/Constant_85_output_0, %/linear_stages.0/w1/Unsqueeze_20_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Reshape_8_output_0 : Float(*, *, *, *, strides=[225, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w1/Reshape_8"](%/linear_stages.0/atten_conv1/sigmoid/Sigmoid_output_0, %/linear_stages.0/w1/Concat_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Mul_7_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w1/Mul_7"](%/linear_stages.0/w1/Reshape_7_output_0, %/linear_stages.0/w1/Reshape_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Constant_86_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_86"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Mul_8_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w1/Mul_8"](%/linear_stages.0/w1/Gather_11_output_0, %/linear_stages.0/w1/Constant_86_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Constant_87_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w1/Constant_87"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Mul_9_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w1/Mul_9"](%/linear_stages.0/w1/Mul_8_output_0, %/linear_stages.0/w1/Constant_87_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_709 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_21_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_21"](%/linear_stages.0/w1/Gather_10_output_0, %onnx::Unsqueeze_709), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_711 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_22_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_22"](%/linear_stages.0/w1/Mul_9_output_0, %onnx::Unsqueeze_711), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_713 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w1/Unsqueeze_23_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w1/Unsqueeze_23"](%/linear_stages.0/w1/Mul_6_output_0, %onnx::Unsqueeze_713), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.0/w1/Concat_10_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w1/Concat_10"](%/linear_stages.0/w1/Unsqueeze_21_output_0, %/linear_stages.0/w1/Unsqueeze_22_output_0, %/linear_stages.0/w1/Unsqueeze_23_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Reshape_9_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w1/Reshape_9"](%/linear_stages.0/w1/Mul_7_output_0, %/linear_stages.0/w1/Concat_10_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w1/Transpose_5_output_0 : Float(*, *, *, strides=[57600, 1, 25], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.0/w1/Transpose_5"](%/linear_stages.0/w1/Reshape_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.0/w1/MatMul_1_output_0 : Float(*, *, 256, strides=[6400, 256, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/linear_stages.0/w1/MatMul_1"](%/linear_stages.0/w1/Transpose_5_output_0, %onnx::MatMul_2077), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.0/w1/Transpose_6_output_0 : Float(*, 256, *, strides=[6400, 1, 256], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.0/w1/Transpose_6"](%/linear_stages.0/w1/MatMul_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.0/w1/Col2Im_1_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Col2Im[dilations=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.0/w1/Col2Im_1"](%/linear_stages.0/w1/Transpose_6_output_0, %onnx::Col2Im_299, %onnx::Col2Im_139), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4874:0
  %/linear_stages.0/w1/Add_13_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_13"](%/linear_stages.0/w1/Col2Im_1_output_0, %onnx::Add_2078), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:170:0
  %/linear_stages.0/w1/Add_14_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w1/Add_14"](%/linear_stages.0/w1/Add_6_output_0, %/linear_stages.0/w1/Add_13_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:187:0
  %/linear_stages.0/batch_norm1/BatchNormalization_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::BatchNormalization[epsilon=1.0000000000000001e-05, momentum=0.90000000000000002, training_mode=0, onnx_name="/linear_stages.0/batch_norm1/BatchNormalization"](%/linear_stages.0/w1/Add_14_output_0, %linear_stages.0.batch_norm1.weight, %linear_stages.0.batch_norm1.bias, %linear_stages.0.batch_norm1.running_mean, %linear_stages.0.batch_norm1.running_var), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/torch.nn.modules.batchnorm.BatchNorm2d::batch_norm1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:2512:0
  %/linear_stages.0/relu/Relu_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/linear_stages.0/relu/Relu"](%/linear_stages.0/batch_norm1/BatchNormalization_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/torch.nn.modules.activation.ReLU::relu # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1498:0
  %/linear_stages.0/atten_conv2/avgpool/GlobalAveragePool_output_0 : Float(*, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=1, device=cpu) = onnx::GlobalAveragePool[onnx_name="/linear_stages.0/atten_conv2/avgpool/GlobalAveragePool"](%/linear_stages.0/relu/Relu_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.pooling.AdaptiveAvgPool2d::avgpool # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1260:0
  %/linear_stages.0/atten_conv2/fc/Conv_output_0 : Float(*, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.0/atten_conv2/fc/Conv"](%/linear_stages.0/atten_conv2/avgpool/GlobalAveragePool_output_0, %onnx::Conv_1981, %onnx::Conv_1982), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.conv.Conv2d::fc # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\conv.py:454:0
  %/linear_stages.0/atten_conv2/relu/Relu_output_0 : Float(*, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/linear_stages.0/atten_conv2/relu/Relu"](%/linear_stages.0/atten_conv2/fc/Conv_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.activation.ReLU::relu # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1498:0
  %/linear_stages.0/atten_conv2/position_fc/Conv_output_0 : Float(*, 225, 1, 1, strides=[225, 1, 1, 1], requires_grad=0, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.0/atten_conv2/position_fc/Conv"](%/linear_stages.0/atten_conv2/relu/Relu_output_0, %linear_stages.0.atten_conv2.position_fc.weight, %linear_stages.0.atten_conv2.position_fc.bias), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.conv.Conv2d::position_fc # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\conv.py:454:0
  %/linear_stages.0/atten_conv2/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/atten_conv2/Shape"](%/linear_stages.0/atten_conv2/relu/Relu_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.0/atten_conv2/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/atten_conv2/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.0/atten_conv2/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/atten_conv2/Gather"](%/linear_stages.0/atten_conv2/Shape_output_0, %/linear_stages.0/atten_conv2/Constant_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %onnx::Unsqueeze_743 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/atten_conv2/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/atten_conv2/Unsqueeze"](%/linear_stages.0/atten_conv2/Gather_output_0, %onnx::Unsqueeze_743), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2
  %/linear_stages.0/atten_conv2/Constant_1_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/atten_conv2/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2
  %/linear_stages.0/atten_conv2/Constant_2_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={5}, onnx_name="/linear_stages.0/atten_conv2/Constant_2"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2
  %/linear_stages.0/atten_conv2/Constant_3_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={5}, onnx_name="/linear_stages.0/atten_conv2/Constant_3"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2
  %/linear_stages.0/atten_conv2/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/atten_conv2/Concat"](%/linear_stages.0/atten_conv2/Unsqueeze_output_0, %/linear_stages.0/atten_conv2/Constant_1_output_0, %/linear_stages.0/atten_conv2/Constant_2_output_0, %/linear_stages.0/atten_conv2/Constant_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.0/atten_conv2/Reshape_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/atten_conv2/Reshape"](%/linear_stages.0/atten_conv2/position_fc/Conv_output_0, %/linear_stages.0/atten_conv2/Concat_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.0/atten_conv2/Constant_4_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={30}, onnx_name="/linear_stages.0/atten_conv2/Constant_4"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:235:0
  %/linear_stages.0/atten_conv2/Div_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Div[onnx_name="/linear_stages.0/atten_conv2/Div"](%/linear_stages.0/atten_conv2/Reshape_output_0, %/linear_stages.0/atten_conv2/Constant_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:235:0
  %/linear_stages.0/atten_conv2/sigmoid/Sigmoid_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Sigmoid[onnx_name="/linear_stages.0/atten_conv2/sigmoid/Sigmoid"](%/linear_stages.0/atten_conv2/Div_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.activation.Sigmoid::sigmoid # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\activation.py:301:0
  %/linear_stages.0/w2/Constant_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w2/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w2/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={9223372036854775807}, onnx_name="/linear_stages.0/w2/Constant_2"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Slice_output_0 : Float(*, 256, 1, 5, device=cpu) = onnx::Slice[onnx_name="/linear_stages.0/w2/Slice"](%/linear_stages.0/relu/Relu_output_0, %/linear_stages.0/w2/Constant_1_output_0, %/linear_stages.0/w2/Constant_2_output_0, %/linear_stages.0/w2/Constant_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_3_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w2/Constant_3"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_4_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_4"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_5_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_5"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Slice_1_output_0 : Float(*, 256, 1, 5, device=cpu) = onnx::Slice[onnx_name="/linear_stages.0/w2/Slice_1"](%/linear_stages.0/relu/Relu_output_0, %/linear_stages.0/w2/Constant_4_output_0, %/linear_stages.0/w2/Constant_5_output_0, %/linear_stages.0/w2/Constant_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Concat_output_0 : Float(*, 256, 7, 5, device=cpu) = onnx::Concat[axis=2, onnx_name="/linear_stages.0/w2/Concat"](%/linear_stages.0/w2/Slice_output_0, %/linear_stages.0/relu/Relu_output_0, %/linear_stages.0/w2/Slice_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_6_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_6"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_7_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w2/Constant_7"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_8_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={9223372036854775807}, onnx_name="/linear_stages.0/w2/Constant_8"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Slice_2_output_0 : Float(*, 256, 7, 1, device=cpu) = onnx::Slice[onnx_name="/linear_stages.0/w2/Slice_2"](%/linear_stages.0/w2/Concat_output_0, %/linear_stages.0/w2/Constant_7_output_0, %/linear_stages.0/w2/Constant_8_output_0, %/linear_stages.0/w2/Constant_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_9_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_9"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_10_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_10"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_11_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_11"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Slice_3_output_0 : Float(*, 256, 7, 1, device=cpu) = onnx::Slice[onnx_name="/linear_stages.0/w2/Slice_3"](%/linear_stages.0/w2/Concat_output_0, %/linear_stages.0/w2/Constant_10_output_0, %/linear_stages.0/w2/Constant_11_output_0, %/linear_stages.0/w2/Constant_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Concat_1_output_0 : Float(*, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=1, device=cpu) = onnx::Concat[axis=3, onnx_name="/linear_stages.0/w2/Concat_1"](%/linear_stages.0/w2/Slice_2_output_0, %/linear_stages.0/w2/Concat_output_0, %/linear_stages.0/w2/Slice_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_12_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={4}, onnx_name="/linear_stages.0/w2/Constant_12"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_13_output_0 : Long(4, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value= 1  1  1  1 [ CPULongType{4} ], onnx_name="/linear_stages.0/w2/Constant_13"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/ConstantOfShape_output_0 : Long(4, strides=[1], device=cpu) = onnx::ConstantOfShape[value={0}, onnx_name="/linear_stages.0/w2/ConstantOfShape"](%/linear_stages.0/w2/Constant_12_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Concat_2_output_0 : Long(8, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w2/Concat_2"](%/linear_stages.0/w2/Constant_13_output_0, %/linear_stages.0/w2/ConstantOfShape_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_14_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=-1  2 [ CPULongType{2} ], onnx_name="/linear_stages.0/w2/Constant_14"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Reshape_output_0 : Long(4, 2, strides=[2, 1], device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w2/Reshape"](%/linear_stages.0/w2/Concat_2_output_0, %/linear_stages.0/w2/Constant_14_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_15_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_15"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_16_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w2/Constant_16"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_17_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-9223372036854775807}, onnx_name="/linear_stages.0/w2/Constant_17"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_18_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w2/Constant_18"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Slice_4_output_0 : Long(4, 2, strides=[2, 1], device=cpu) = onnx::Slice[onnx_name="/linear_stages.0/w2/Slice_4"](%/linear_stages.0/w2/Reshape_output_0, %/linear_stages.0/w2/Constant_16_output_0, %/linear_stages.0/w2/Constant_17_output_0, %/linear_stages.0/w2/Constant_15_output_0, %/linear_stages.0/w2/Constant_18_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Transpose_output_0 : Long(2, 4, strides=[4, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/linear_stages.0/w2/Transpose"](%/linear_stages.0/w2/Slice_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Constant_19_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w2/Constant_19"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Reshape_1_output_0 : Long(8, strides=[1], device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w2/Reshape_1"](%/linear_stages.0/w2/Transpose_output_0, %/linear_stages.0/w2/Constant_19_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Cast_output_0 : Long(8, strides=[1], device=cpu) = onnx::Cast[to=7, onnx_name="/linear_stages.0/w2/Cast"](%/linear_stages.0/w2/Reshape_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Pad_output_0 : Float(*, *, *, *, strides=[12544, 49, 7, 1], requires_grad=1, device=cpu) = onnx::Pad[mode="edge", onnx_name="/linear_stages.0/w2/Pad"](%/linear_stages.0/relu/Relu_output_0, %/linear_stages.0/w2/Cast_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.0/w2/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape"](%/linear_stages.0/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Constant_20_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_20"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather"](%/linear_stages.0/w2/Shape_output_0, %/linear_stages.0/w2/Constant_20_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_1"](%/linear_stages.0/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Constant_21_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_21"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_1"](%/linear_stages.0/w2/Shape_1_output_0, %/linear_stages.0/w2/Constant_21_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_2"](%/linear_stages.0/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Constant_22_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w2/Constant_22"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_2"](%/linear_stages.0/w2/Shape_2_output_0, %/linear_stages.0/w2/Constant_22_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Shape_3_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_3"](%/linear_stages.0/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Constant_23_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_23"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Gather_3_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_3"](%/linear_stages.0/w2/Shape_3_output_0, %/linear_stages.0/w2/Constant_23_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Constant_24_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_24"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w2/Sub_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w2/Sub"](%/linear_stages.0/w2/Gather_2_output_0, %/linear_stages.0/w2/Constant_24_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w2/Constant_25_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_25"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w2/Add_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add"](%/linear_stages.0/w2/Sub_output_0, %/linear_stages.0/w2/Constant_25_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w2/Constant_26_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_26"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w2/Sub_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w2/Sub_1"](%/linear_stages.0/w2/Gather_3_output_0, %/linear_stages.0/w2/Constant_26_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w2/Constant_27_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_27"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w2/Add_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_1"](%/linear_stages.0/w2/Sub_1_output_0, %/linear_stages.0/w2/Constant_27_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w2/Shape_4_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_4"](%/linear_stages.0/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_28_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w2/Constant_28"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Gather_4_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_4"](%/linear_stages.0/w2/Shape_4_output_0, %/linear_stages.0/w2/Constant_28_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Shape_5_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_5"](%/linear_stages.0/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_29_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_29"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Gather_5_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_5"](%/linear_stages.0/w2/Shape_5_output_0, %/linear_stages.0/w2/Constant_29_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_30_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_30"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Add_2_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_2"](%/linear_stages.0/w2/Gather_4_output_0, %/linear_stages.0/w2/Constant_30_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_31_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w2/Constant_31"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Sub_2_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w2/Sub_2"](%/linear_stages.0/w2/Add_2_output_0, %/linear_stages.0/w2/Constant_31_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_32_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_32"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_33_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_33"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Range_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.0/w2/Range"](%/linear_stages.0/w2/Constant_32_output_0, %/linear_stages.0/w2/Sub_2_output_0, %/linear_stages.0/w2/Constant_33_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_34_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_34"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Unsqueeze_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze"](%/linear_stages.0/w2/Range_output_0, %/linear_stages.0/w2/Constant_34_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_35_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.0/w2/Constant_35"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Add_3_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_3"](%/linear_stages.0/w2/Unsqueeze_output_0, %/linear_stages.0/w2/Constant_35_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_36_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_36"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Add_4_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_4"](%/linear_stages.0/w2/Gather_5_output_0, %/linear_stages.0/w2/Constant_36_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_37_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w2/Constant_37"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Sub_3_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w2/Sub_3"](%/linear_stages.0/w2/Add_4_output_0, %/linear_stages.0/w2/Constant_37_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_38_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_38"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_39_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_39"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Range_1_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.0/w2/Range_1"](%/linear_stages.0/w2/Constant_38_output_0, %/linear_stages.0/w2/Sub_3_output_0, %/linear_stages.0/w2/Constant_39_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_40_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_40"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Unsqueeze_1_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_1"](%/linear_stages.0/w2/Range_1_output_0, %/linear_stages.0/w2/Constant_40_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_41_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.0/w2/Constant_41"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Add_5_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_5"](%/linear_stages.0/w2/Unsqueeze_1_output_0, %/linear_stages.0/w2/Constant_41_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Shape_6_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_6"](%/linear_stages.0/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_42_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_42"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Gather_6_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_6"](%/linear_stages.0/w2/Shape_6_output_0, %/linear_stages.0/w2/Constant_42_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Shape_7_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_7"](%/linear_stages.0/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_43_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_43"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Gather_7_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_7"](%/linear_stages.0/w2/Shape_7_output_0, %/linear_stages.0/w2/Constant_43_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_44_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/w2/Constant_44"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Mul_output_0 : Long(device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w2/Mul"](%/linear_stages.0/w2/Gather_7_output_0, %/linear_stages.0/w2/Constant_44_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_45_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_45"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_2"](%/linear_stages.0/w2/Gather_6_output_0, %/linear_stages.0/w2/Constant_45_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_46_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_46"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Unsqueeze_3_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_3"](%/linear_stages.0/w2/Mul_output_0, %/linear_stages.0/w2/Constant_46_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_47_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w2/Constant_47"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Concat_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w2/Concat_3"](%/linear_stages.0/w2/Unsqueeze_2_output_0, %/linear_stages.0/w2/Unsqueeze_3_output_0, %/linear_stages.0/w2/Constant_47_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_48_output_0 : Long(8, strides=[1], device=cpu) = onnx::Constant[value= 0  0  0  0  0  0  0  0 [ CPULongType{8} ], onnx_name="/linear_stages.0/w2/Constant_48"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Pad_1_output_0 : Float(*, 256, 7, 7, device=cpu) = onnx::Pad[onnx_name="/linear_stages.0/w2/Pad_1"](%/linear_stages.0/w2/Concat_1_output_0, %/linear_stages.0/w2/Constant_48_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Gather_8_output_0 : Float(*, 256, 3, *, 7, device=cpu) = onnx::Gather[axis=2, onnx_name="/linear_stages.0/w2/Gather_8"](%/linear_stages.0/w2/Pad_1_output_0, %/linear_stages.0/w2/Add_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Gather_9_output_0 : Float(*, 256, 3, *, 3, *, device=cpu) = onnx::Gather[axis=4, onnx_name="/linear_stages.0/w2/Gather_9"](%/linear_stages.0/w2/Gather_8_output_0, %/linear_stages.0/w2/Add_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Transpose_1_output_0 : Float(*, 256, 3, 3, *, *, device=cpu) = onnx::Transpose[perm=[0, 1, 2, 4, 3, 5], onnx_name="/linear_stages.0/w2/Transpose_1"](%/linear_stages.0/w2/Gather_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Reshape_2_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w2/Reshape_2"](%/linear_stages.0/w2/Transpose_1_output_0, %/linear_stages.0/w2/Concat_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Mul_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w2/Mul_1"](%/linear_stages.0/w2/Add_output_0, %/linear_stages.0/w2/Add_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_870 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_4_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_4"](%/linear_stages.0/w2/Gather_output_0, %onnx::Unsqueeze_870), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_872 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_5_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_5"](%/linear_stages.0/w2/Gather_1_output_0, %onnx::Unsqueeze_872), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.0/w2/Constant_49_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/w2/Constant_49"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_876 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_6_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_6"](%/linear_stages.0/w2/Mul_1_output_0, %onnx::Unsqueeze_876), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.0/w2/Concat_4_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w2/Concat_4"](%/linear_stages.0/w2/Unsqueeze_4_output_0, %/linear_stages.0/w2/Unsqueeze_5_output_0, %/linear_stages.0/w2/Constant_49_output_0, %/linear_stages.0/w2/Unsqueeze_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Reshape_3_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w2/Reshape_3"](%/linear_stages.0/w2/Reshape_2_output_0, %/linear_stages.0/w2/Concat_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_880 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_7_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_7"](%/linear_stages.0/w2/Gather_output_0, %onnx::Unsqueeze_880), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.0/w2/Constant_50_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_50"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.0/w2/Constant_51_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/w2/Constant_51"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_886 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_8_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_8"](%/linear_stages.0/w2/Mul_1_output_0, %onnx::Unsqueeze_886), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.0/w2/Concat_5_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w2/Concat_5"](%/linear_stages.0/w2/Unsqueeze_7_output_0, %/linear_stages.0/w2/Constant_50_output_0, %/linear_stages.0/w2/Constant_51_output_0, %/linear_stages.0/w2/Unsqueeze_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Reshape_4_output_0 : Float(*, *, *, *, strides=[225, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w2/Reshape_4"](%/linear_stages.0/atten_conv2/sigmoid/Sigmoid_output_0, %/linear_stages.0/w2/Concat_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Mul_2_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w2/Mul_2"](%/linear_stages.0/w2/Reshape_3_output_0, %/linear_stages.0/w2/Reshape_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Constant_52_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_52"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Mul_3_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w2/Mul_3"](%/linear_stages.0/w2/Gather_1_output_0, %/linear_stages.0/w2/Constant_52_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Constant_53_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_53"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Mul_4_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w2/Mul_4"](%/linear_stages.0/w2/Mul_3_output_0, %/linear_stages.0/w2/Constant_53_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_895 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_9_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_9"](%/linear_stages.0/w2/Gather_output_0, %onnx::Unsqueeze_895), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_897 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_10_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_10"](%/linear_stages.0/w2/Mul_4_output_0, %onnx::Unsqueeze_897), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_899 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_11_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_11"](%/linear_stages.0/w2/Mul_1_output_0, %onnx::Unsqueeze_899), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.0/w2/Concat_6_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w2/Concat_6"](%/linear_stages.0/w2/Unsqueeze_9_output_0, %/linear_stages.0/w2/Unsqueeze_10_output_0, %/linear_stages.0/w2/Unsqueeze_11_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Reshape_5_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w2/Reshape_5"](%/linear_stages.0/w2/Mul_2_output_0, %/linear_stages.0/w2/Concat_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Transpose_2_output_0 : Float(*, *, *, strides=[57600, 1, 25], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.0/w2/Transpose_2"](%/linear_stages.0/w2/Reshape_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.0/w2/MatMul_output_0 : Float(*, *, 256, strides=[6400, 256, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/linear_stages.0/w2/MatMul"](%/linear_stages.0/w2/Transpose_2_output_0, %onnx::MatMul_2096), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.0/w2/Transpose_3_output_0 : Float(*, 256, *, strides=[6400, 1, 256], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.0/w2/Transpose_3"](%/linear_stages.0/w2/MatMul_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.0/w2/Col2Im_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Col2Im[dilations=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.0/w2/Col2Im"](%/linear_stages.0/w2/Transpose_3_output_0, %onnx::Col2Im_299, %onnx::Col2Im_139), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4874:0
  %/linear_stages.0/w2/Add_6_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_6"](%/linear_stages.0/w2/Col2Im_output_0, %onnx::Add_2097), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:170:0
  %/linear_stages.0/w2/Shape_8_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_8"](%/linear_stages.0/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Constant_54_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_54"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Gather_10_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_10"](%/linear_stages.0/w2/Shape_8_output_0, %/linear_stages.0/w2/Constant_54_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Shape_9_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_9"](%/linear_stages.0/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Constant_55_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_55"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Gather_11_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_11"](%/linear_stages.0/w2/Shape_9_output_0, %/linear_stages.0/w2/Constant_55_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Shape_10_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_10"](%/linear_stages.0/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Constant_56_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w2/Constant_56"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Gather_12_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_12"](%/linear_stages.0/w2/Shape_10_output_0, %/linear_stages.0/w2/Constant_56_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Shape_11_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_11"](%/linear_stages.0/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Constant_57_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_57"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Gather_13_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_13"](%/linear_stages.0/w2/Shape_11_output_0, %/linear_stages.0/w2/Constant_57_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.0/w2/Constant_58_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_58"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w2/Sub_4_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w2/Sub_4"](%/linear_stages.0/w2/Gather_12_output_0, %/linear_stages.0/w2/Constant_58_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w2/Constant_59_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_59"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w2/Add_7_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_7"](%/linear_stages.0/w2/Sub_4_output_0, %/linear_stages.0/w2/Constant_59_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.0/w2/Constant_60_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_60"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w2/Sub_5_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w2/Sub_5"](%/linear_stages.0/w2/Gather_13_output_0, %/linear_stages.0/w2/Constant_60_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w2/Constant_61_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_61"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w2/Add_8_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_8"](%/linear_stages.0/w2/Sub_5_output_0, %/linear_stages.0/w2/Constant_61_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.0/w2/Shape_12_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_12"](%/linear_stages.0/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_62_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w2/Constant_62"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Gather_14_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_14"](%/linear_stages.0/w2/Shape_12_output_0, %/linear_stages.0/w2/Constant_62_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Shape_13_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_13"](%/linear_stages.0/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_63_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_63"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Gather_15_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_15"](%/linear_stages.0/w2/Shape_13_output_0, %/linear_stages.0/w2/Constant_63_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_64_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_64"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Add_9_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_9"](%/linear_stages.0/w2/Gather_14_output_0, %/linear_stages.0/w2/Constant_64_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_65_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w2/Constant_65"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Sub_6_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w2/Sub_6"](%/linear_stages.0/w2/Add_9_output_0, %/linear_stages.0/w2/Constant_65_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_66_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_66"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_67_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_67"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Range_2_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.0/w2/Range_2"](%/linear_stages.0/w2/Constant_66_output_0, %/linear_stages.0/w2/Sub_6_output_0, %/linear_stages.0/w2/Constant_67_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_68_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_68"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Unsqueeze_12_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_12"](%/linear_stages.0/w2/Range_2_output_0, %/linear_stages.0/w2/Constant_68_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_69_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.0/w2/Constant_69"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Add_10_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_10"](%/linear_stages.0/w2/Unsqueeze_12_output_0, %/linear_stages.0/w2/Constant_69_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_70_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_70"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Add_11_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_11"](%/linear_stages.0/w2/Gather_15_output_0, %/linear_stages.0/w2/Constant_70_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_71_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.0/w2/Constant_71"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Sub_7_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.0/w2/Sub_7"](%/linear_stages.0/w2/Add_11_output_0, %/linear_stages.0/w2/Constant_71_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_72_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_72"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_73_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_73"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Range_3_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.0/w2/Range_3"](%/linear_stages.0/w2/Constant_72_output_0, %/linear_stages.0/w2/Sub_7_output_0, %/linear_stages.0/w2/Constant_73_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_74_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_74"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Unsqueeze_13_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_13"](%/linear_stages.0/w2/Range_3_output_0, %/linear_stages.0/w2/Constant_74_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_75_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.0/w2/Constant_75"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Add_12_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_12"](%/linear_stages.0/w2/Unsqueeze_13_output_0, %/linear_stages.0/w2/Constant_75_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Shape_14_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_14"](%/linear_stages.0/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_76_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_76"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Gather_16_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_16"](%/linear_stages.0/w2/Shape_14_output_0, %/linear_stages.0/w2/Constant_76_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Shape_15_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.0/w2/Shape_15"](%/linear_stages.0/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_77_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_77"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Gather_17_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.0/w2/Gather_17"](%/linear_stages.0/w2/Shape_15_output_0, %/linear_stages.0/w2/Constant_77_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_78_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/w2/Constant_78"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Mul_5_output_0 : Long(device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w2/Mul_5"](%/linear_stages.0/w2/Gather_17_output_0, %/linear_stages.0/w2/Constant_78_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_79_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_79"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Unsqueeze_14_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_14"](%/linear_stages.0/w2/Gather_16_output_0, %/linear_stages.0/w2/Constant_79_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_80_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.0/w2/Constant_80"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Unsqueeze_15_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_15"](%/linear_stages.0/w2/Mul_5_output_0, %/linear_stages.0/w2/Constant_80_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_81_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.0/w2/Constant_81"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Concat_7_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w2/Concat_7"](%/linear_stages.0/w2/Unsqueeze_14_output_0, %/linear_stages.0/w2/Unsqueeze_15_output_0, %/linear_stages.0/w2/Constant_81_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Constant_82_output_0 : Long(8, strides=[1], device=cpu) = onnx::Constant[value= 0  0  0  0  0  0  0  0 [ CPULongType{8} ], onnx_name="/linear_stages.0/w2/Constant_82"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Pad_2_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pad[onnx_name="/linear_stages.0/w2/Pad_2"](%/linear_stages.0/w2/Pad_output_0, %/linear_stages.0/w2/Constant_82_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Gather_18_output_0 : Float(*, *, 3, *, *, device=cpu) = onnx::Gather[axis=2, onnx_name="/linear_stages.0/w2/Gather_18"](%/linear_stages.0/w2/Pad_2_output_0, %/linear_stages.0/w2/Add_10_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Gather_19_output_0 : Float(*, *, 3, *, 3, *, device=cpu) = onnx::Gather[axis=4, onnx_name="/linear_stages.0/w2/Gather_19"](%/linear_stages.0/w2/Gather_18_output_0, %/linear_stages.0/w2/Add_12_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Transpose_4_output_0 : Float(*, *, 3, 3, *, *, device=cpu) = onnx::Transpose[perm=[0, 1, 2, 4, 3, 5], onnx_name="/linear_stages.0/w2/Transpose_4"](%/linear_stages.0/w2/Gather_19_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Reshape_6_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w2/Reshape_6"](%/linear_stages.0/w2/Transpose_4_output_0, %/linear_stages.0/w2/Concat_7_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.0/w2/Mul_6_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w2/Mul_6"](%/linear_stages.0/w2/Add_7_output_0, %/linear_stages.0/w2/Add_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_991 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_16_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_16"](%/linear_stages.0/w2/Gather_10_output_0, %onnx::Unsqueeze_991), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_993 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_17_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_17"](%/linear_stages.0/w2/Gather_11_output_0, %onnx::Unsqueeze_993), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.0/w2/Constant_83_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/w2/Constant_83"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_997 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_18_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_18"](%/linear_stages.0/w2/Mul_6_output_0, %onnx::Unsqueeze_997), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.0/w2/Concat_8_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w2/Concat_8"](%/linear_stages.0/w2/Unsqueeze_16_output_0, %/linear_stages.0/w2/Unsqueeze_17_output_0, %/linear_stages.0/w2/Constant_83_output_0, %/linear_stages.0/w2/Unsqueeze_18_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Reshape_7_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w2/Reshape_7"](%/linear_stages.0/w2/Reshape_6_output_0, %/linear_stages.0/w2/Concat_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1001 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_19_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_19"](%/linear_stages.0/w2/Gather_10_output_0, %onnx::Unsqueeze_1001), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.0/w2/Constant_84_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.0/w2/Constant_84"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.0/w2/Constant_85_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.0/w2/Constant_85"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1007 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_20_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_20"](%/linear_stages.0/w2/Mul_6_output_0, %onnx::Unsqueeze_1007), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.0/w2/Concat_9_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w2/Concat_9"](%/linear_stages.0/w2/Unsqueeze_19_output_0, %/linear_stages.0/w2/Constant_84_output_0, %/linear_stages.0/w2/Constant_85_output_0, %/linear_stages.0/w2/Unsqueeze_20_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Reshape_8_output_0 : Float(*, *, *, *, strides=[225, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w2/Reshape_8"](%/linear_stages.0/atten_conv2/sigmoid/Sigmoid_output_0, %/linear_stages.0/w2/Concat_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Mul_7_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w2/Mul_7"](%/linear_stages.0/w2/Reshape_7_output_0, %/linear_stages.0/w2/Reshape_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Constant_86_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_86"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Mul_8_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w2/Mul_8"](%/linear_stages.0/w2/Gather_11_output_0, %/linear_stages.0/w2/Constant_86_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Constant_87_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.0/w2/Constant_87"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Mul_9_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.0/w2/Mul_9"](%/linear_stages.0/w2/Mul_8_output_0, %/linear_stages.0/w2/Constant_87_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1016 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_21_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_21"](%/linear_stages.0/w2/Gather_10_output_0, %onnx::Unsqueeze_1016), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1018 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_22_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_22"](%/linear_stages.0/w2/Mul_9_output_0, %onnx::Unsqueeze_1018), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1020 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.0/w2/Unsqueeze_23_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.0/w2/Unsqueeze_23"](%/linear_stages.0/w2/Mul_6_output_0, %onnx::Unsqueeze_1020), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.0/w2/Concat_10_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.0/w2/Concat_10"](%/linear_stages.0/w2/Unsqueeze_21_output_0, %/linear_stages.0/w2/Unsqueeze_22_output_0, %/linear_stages.0/w2/Unsqueeze_23_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Reshape_9_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.0/w2/Reshape_9"](%/linear_stages.0/w2/Mul_7_output_0, %/linear_stages.0/w2/Concat_10_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.0/w2/Transpose_5_output_0 : Float(*, *, *, strides=[57600, 1, 25], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.0/w2/Transpose_5"](%/linear_stages.0/w2/Reshape_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.0/w2/MatMul_1_output_0 : Float(*, *, 256, strides=[6400, 256, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/linear_stages.0/w2/MatMul_1"](%/linear_stages.0/w2/Transpose_5_output_0, %onnx::MatMul_2107), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.0/w2/Transpose_6_output_0 : Float(*, 256, *, strides=[6400, 1, 256], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.0/w2/Transpose_6"](%/linear_stages.0/w2/MatMul_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.0/w2/Col2Im_1_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Col2Im[dilations=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.0/w2/Col2Im_1"](%/linear_stages.0/w2/Transpose_6_output_0, %onnx::Col2Im_299, %onnx::Col2Im_139), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4874:0
  %/linear_stages.0/w2/Add_13_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_13"](%/linear_stages.0/w2/Col2Im_1_output_0, %onnx::Add_2108), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:170:0
  %/linear_stages.0/w2/Add_14_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/w2/Add_14"](%/linear_stages.0/w2/Add_6_output_0, %/linear_stages.0/w2/Add_13_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:187:0
  %/linear_stages.0/batch_norm2/BatchNormalization_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::BatchNormalization[epsilon=1.0000000000000001e-05, momentum=0.90000000000000002, training_mode=0, onnx_name="/linear_stages.0/batch_norm2/BatchNormalization"](%/linear_stages.0/w2/Add_14_output_0, %linear_stages.0.batch_norm2.weight, %linear_stages.0.batch_norm2.bias, %linear_stages.0.batch_norm2.running_mean, %linear_stages.0.batch_norm2.running_var), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/torch.nn.modules.batchnorm.BatchNorm2d::batch_norm2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:2512:0
  %/linear_stages.0/relu_1/Relu_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/linear_stages.0/relu_1/Relu"](%/linear_stages.0/batch_norm2/BatchNormalization_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0/torch.nn.modules.activation.ReLU::relu # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1498:0
  %/linear_stages.0/Add_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.0/Add"](%/relu/Relu_output_0, %/linear_stages.0/relu_1/Relu_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.0 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:128:0
  %/linear_stages.1/atten_conv1/avgpool/GlobalAveragePool_output_0 : Float(*, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=1, device=cpu) = onnx::GlobalAveragePool[onnx_name="/linear_stages.1/atten_conv1/avgpool/GlobalAveragePool"](%/linear_stages.0/Add_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.pooling.AdaptiveAvgPool2d::avgpool # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1260:0
  %/linear_stages.1/atten_conv1/fc/Conv_output_0 : Float(*, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.1/atten_conv1/fc/Conv"](%/linear_stages.1/atten_conv1/avgpool/GlobalAveragePool_output_0, %onnx::Conv_1984, %onnx::Conv_1985), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.conv.Conv2d::fc # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\conv.py:454:0
  %/linear_stages.1/atten_conv1/relu/Relu_output_0 : Float(*, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/linear_stages.1/atten_conv1/relu/Relu"](%/linear_stages.1/atten_conv1/fc/Conv_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.activation.ReLU::relu # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1498:0
  %/linear_stages.1/atten_conv1/position_fc/Conv_output_0 : Float(*, 225, 1, 1, strides=[225, 1, 1, 1], requires_grad=0, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.1/atten_conv1/position_fc/Conv"](%/linear_stages.1/atten_conv1/relu/Relu_output_0, %linear_stages.1.atten_conv1.position_fc.weight, %linear_stages.1.atten_conv1.position_fc.bias), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.conv.Conv2d::position_fc # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\conv.py:454:0
  %/linear_stages.1/atten_conv1/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/atten_conv1/Shape"](%/linear_stages.1/atten_conv1/relu/Relu_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.1/atten_conv1/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/atten_conv1/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.1/atten_conv1/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/atten_conv1/Gather"](%/linear_stages.1/atten_conv1/Shape_output_0, %/linear_stages.1/atten_conv1/Constant_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %onnx::Unsqueeze_1051 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/atten_conv1/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/atten_conv1/Unsqueeze"](%/linear_stages.1/atten_conv1/Gather_output_0, %onnx::Unsqueeze_1051), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1
  %/linear_stages.1/atten_conv1/Constant_1_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/atten_conv1/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1
  %/linear_stages.1/atten_conv1/Constant_2_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={5}, onnx_name="/linear_stages.1/atten_conv1/Constant_2"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1
  %/linear_stages.1/atten_conv1/Constant_3_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={5}, onnx_name="/linear_stages.1/atten_conv1/Constant_3"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1
  %/linear_stages.1/atten_conv1/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/atten_conv1/Concat"](%/linear_stages.1/atten_conv1/Unsqueeze_output_0, %/linear_stages.1/atten_conv1/Constant_1_output_0, %/linear_stages.1/atten_conv1/Constant_2_output_0, %/linear_stages.1/atten_conv1/Constant_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.1/atten_conv1/Reshape_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/atten_conv1/Reshape"](%/linear_stages.1/atten_conv1/position_fc/Conv_output_0, %/linear_stages.1/atten_conv1/Concat_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.1/atten_conv1/Constant_4_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={30}, onnx_name="/linear_stages.1/atten_conv1/Constant_4"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:235:0
  %/linear_stages.1/atten_conv1/Div_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Div[onnx_name="/linear_stages.1/atten_conv1/Div"](%/linear_stages.1/atten_conv1/Reshape_output_0, %/linear_stages.1/atten_conv1/Constant_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:235:0
  %/linear_stages.1/atten_conv1/sigmoid/Sigmoid_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Sigmoid[onnx_name="/linear_stages.1/atten_conv1/sigmoid/Sigmoid"](%/linear_stages.1/atten_conv1/Div_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv1/torch.nn.modules.activation.Sigmoid::sigmoid # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\activation.py:301:0
  %/linear_stages.1/w1/Constant_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w1/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w1/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={9223372036854775807}, onnx_name="/linear_stages.1/w1/Constant_2"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Slice_output_0 : Float(*, 256, 1, 5, device=cpu) = onnx::Slice[onnx_name="/linear_stages.1/w1/Slice"](%/linear_stages.0/Add_output_0, %/linear_stages.1/w1/Constant_1_output_0, %/linear_stages.1/w1/Constant_2_output_0, %/linear_stages.1/w1/Constant_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_3_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w1/Constant_3"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_4_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_4"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_5_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_5"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Slice_1_output_0 : Float(*, 256, 1, 5, device=cpu) = onnx::Slice[onnx_name="/linear_stages.1/w1/Slice_1"](%/linear_stages.0/Add_output_0, %/linear_stages.1/w1/Constant_4_output_0, %/linear_stages.1/w1/Constant_5_output_0, %/linear_stages.1/w1/Constant_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Concat_output_0 : Float(*, 256, 7, 5, device=cpu) = onnx::Concat[axis=2, onnx_name="/linear_stages.1/w1/Concat"](%/linear_stages.1/w1/Slice_output_0, %/linear_stages.0/Add_output_0, %/linear_stages.1/w1/Slice_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_6_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_6"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_7_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w1/Constant_7"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_8_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={9223372036854775807}, onnx_name="/linear_stages.1/w1/Constant_8"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Slice_2_output_0 : Float(*, 256, 7, 1, device=cpu) = onnx::Slice[onnx_name="/linear_stages.1/w1/Slice_2"](%/linear_stages.1/w1/Concat_output_0, %/linear_stages.1/w1/Constant_7_output_0, %/linear_stages.1/w1/Constant_8_output_0, %/linear_stages.1/w1/Constant_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_9_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_9"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_10_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_10"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_11_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_11"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Slice_3_output_0 : Float(*, 256, 7, 1, device=cpu) = onnx::Slice[onnx_name="/linear_stages.1/w1/Slice_3"](%/linear_stages.1/w1/Concat_output_0, %/linear_stages.1/w1/Constant_10_output_0, %/linear_stages.1/w1/Constant_11_output_0, %/linear_stages.1/w1/Constant_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Concat_1_output_0 : Float(*, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=1, device=cpu) = onnx::Concat[axis=3, onnx_name="/linear_stages.1/w1/Concat_1"](%/linear_stages.1/w1/Slice_2_output_0, %/linear_stages.1/w1/Concat_output_0, %/linear_stages.1/w1/Slice_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_12_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={4}, onnx_name="/linear_stages.1/w1/Constant_12"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_13_output_0 : Long(4, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value= 1  1  1  1 [ CPULongType{4} ], onnx_name="/linear_stages.1/w1/Constant_13"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/ConstantOfShape_output_0 : Long(4, strides=[1], device=cpu) = onnx::ConstantOfShape[value={0}, onnx_name="/linear_stages.1/w1/ConstantOfShape"](%/linear_stages.1/w1/Constant_12_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Concat_2_output_0 : Long(8, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w1/Concat_2"](%/linear_stages.1/w1/Constant_13_output_0, %/linear_stages.1/w1/ConstantOfShape_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_14_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=-1  2 [ CPULongType{2} ], onnx_name="/linear_stages.1/w1/Constant_14"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Reshape_output_0 : Long(4, 2, strides=[2, 1], device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w1/Reshape"](%/linear_stages.1/w1/Concat_2_output_0, %/linear_stages.1/w1/Constant_14_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_15_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_15"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_16_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w1/Constant_16"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_17_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-9223372036854775807}, onnx_name="/linear_stages.1/w1/Constant_17"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_18_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w1/Constant_18"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Slice_4_output_0 : Long(4, 2, strides=[2, 1], device=cpu) = onnx::Slice[onnx_name="/linear_stages.1/w1/Slice_4"](%/linear_stages.1/w1/Reshape_output_0, %/linear_stages.1/w1/Constant_16_output_0, %/linear_stages.1/w1/Constant_17_output_0, %/linear_stages.1/w1/Constant_15_output_0, %/linear_stages.1/w1/Constant_18_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Transpose_output_0 : Long(2, 4, strides=[4, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/linear_stages.1/w1/Transpose"](%/linear_stages.1/w1/Slice_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Constant_19_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w1/Constant_19"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Reshape_1_output_0 : Long(8, strides=[1], device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w1/Reshape_1"](%/linear_stages.1/w1/Transpose_output_0, %/linear_stages.1/w1/Constant_19_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Cast_output_0 : Long(8, strides=[1], device=cpu) = onnx::Cast[to=7, onnx_name="/linear_stages.1/w1/Cast"](%/linear_stages.1/w1/Reshape_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Pad_output_0 : Float(*, *, *, *, strides=[12544, 49, 7, 1], requires_grad=1, device=cpu) = onnx::Pad[mode="edge", onnx_name="/linear_stages.1/w1/Pad"](%/linear_stages.0/Add_output_0, %/linear_stages.1/w1/Cast_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w1/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape"](%/linear_stages.1/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Constant_20_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_20"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather"](%/linear_stages.1/w1/Shape_output_0, %/linear_stages.1/w1/Constant_20_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_1"](%/linear_stages.1/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Constant_21_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_21"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_1"](%/linear_stages.1/w1/Shape_1_output_0, %/linear_stages.1/w1/Constant_21_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_2"](%/linear_stages.1/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Constant_22_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w1/Constant_22"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_2"](%/linear_stages.1/w1/Shape_2_output_0, %/linear_stages.1/w1/Constant_22_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Shape_3_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_3"](%/linear_stages.1/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Constant_23_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_23"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Gather_3_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_3"](%/linear_stages.1/w1/Shape_3_output_0, %/linear_stages.1/w1/Constant_23_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Constant_24_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_24"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w1/Sub_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w1/Sub"](%/linear_stages.1/w1/Gather_2_output_0, %/linear_stages.1/w1/Constant_24_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w1/Constant_25_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_25"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w1/Add_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add"](%/linear_stages.1/w1/Sub_output_0, %/linear_stages.1/w1/Constant_25_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w1/Constant_26_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_26"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w1/Sub_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w1/Sub_1"](%/linear_stages.1/w1/Gather_3_output_0, %/linear_stages.1/w1/Constant_26_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w1/Constant_27_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_27"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w1/Add_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_1"](%/linear_stages.1/w1/Sub_1_output_0, %/linear_stages.1/w1/Constant_27_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w1/Shape_4_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_4"](%/linear_stages.1/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_28_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w1/Constant_28"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Gather_4_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_4"](%/linear_stages.1/w1/Shape_4_output_0, %/linear_stages.1/w1/Constant_28_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Shape_5_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_5"](%/linear_stages.1/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_29_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_29"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Gather_5_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_5"](%/linear_stages.1/w1/Shape_5_output_0, %/linear_stages.1/w1/Constant_29_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_30_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_30"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Add_2_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_2"](%/linear_stages.1/w1/Gather_4_output_0, %/linear_stages.1/w1/Constant_30_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_31_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w1/Constant_31"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Sub_2_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w1/Sub_2"](%/linear_stages.1/w1/Add_2_output_0, %/linear_stages.1/w1/Constant_31_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_32_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_32"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_33_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_33"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Range_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.1/w1/Range"](%/linear_stages.1/w1/Constant_32_output_0, %/linear_stages.1/w1/Sub_2_output_0, %/linear_stages.1/w1/Constant_33_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_34_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_34"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Unsqueeze_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze"](%/linear_stages.1/w1/Range_output_0, %/linear_stages.1/w1/Constant_34_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_35_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.1/w1/Constant_35"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Add_3_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_3"](%/linear_stages.1/w1/Unsqueeze_output_0, %/linear_stages.1/w1/Constant_35_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_36_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_36"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Add_4_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_4"](%/linear_stages.1/w1/Gather_5_output_0, %/linear_stages.1/w1/Constant_36_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_37_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w1/Constant_37"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Sub_3_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w1/Sub_3"](%/linear_stages.1/w1/Add_4_output_0, %/linear_stages.1/w1/Constant_37_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_38_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_38"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_39_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_39"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Range_1_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.1/w1/Range_1"](%/linear_stages.1/w1/Constant_38_output_0, %/linear_stages.1/w1/Sub_3_output_0, %/linear_stages.1/w1/Constant_39_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_40_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_40"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Unsqueeze_1_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_1"](%/linear_stages.1/w1/Range_1_output_0, %/linear_stages.1/w1/Constant_40_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_41_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.1/w1/Constant_41"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Add_5_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_5"](%/linear_stages.1/w1/Unsqueeze_1_output_0, %/linear_stages.1/w1/Constant_41_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Shape_6_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_6"](%/linear_stages.1/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_42_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_42"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Gather_6_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_6"](%/linear_stages.1/w1/Shape_6_output_0, %/linear_stages.1/w1/Constant_42_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Shape_7_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_7"](%/linear_stages.1/w1/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_43_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_43"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Gather_7_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_7"](%/linear_stages.1/w1/Shape_7_output_0, %/linear_stages.1/w1/Constant_43_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_44_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/w1/Constant_44"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Mul_output_0 : Long(device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w1/Mul"](%/linear_stages.1/w1/Gather_7_output_0, %/linear_stages.1/w1/Constant_44_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_45_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_45"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_2"](%/linear_stages.1/w1/Gather_6_output_0, %/linear_stages.1/w1/Constant_45_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_46_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_46"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Unsqueeze_3_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_3"](%/linear_stages.1/w1/Mul_output_0, %/linear_stages.1/w1/Constant_46_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_47_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w1/Constant_47"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Concat_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w1/Concat_3"](%/linear_stages.1/w1/Unsqueeze_2_output_0, %/linear_stages.1/w1/Unsqueeze_3_output_0, %/linear_stages.1/w1/Constant_47_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_48_output_0 : Long(8, strides=[1], device=cpu) = onnx::Constant[value= 0  0  0  0  0  0  0  0 [ CPULongType{8} ], onnx_name="/linear_stages.1/w1/Constant_48"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Pad_1_output_0 : Float(*, 256, 7, 7, device=cpu) = onnx::Pad[onnx_name="/linear_stages.1/w1/Pad_1"](%/linear_stages.1/w1/Concat_1_output_0, %/linear_stages.1/w1/Constant_48_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Gather_8_output_0 : Float(*, 256, 3, *, 7, device=cpu) = onnx::Gather[axis=2, onnx_name="/linear_stages.1/w1/Gather_8"](%/linear_stages.1/w1/Pad_1_output_0, %/linear_stages.1/w1/Add_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Gather_9_output_0 : Float(*, 256, 3, *, 3, *, device=cpu) = onnx::Gather[axis=4, onnx_name="/linear_stages.1/w1/Gather_9"](%/linear_stages.1/w1/Gather_8_output_0, %/linear_stages.1/w1/Add_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Transpose_1_output_0 : Float(*, 256, 3, 3, *, *, device=cpu) = onnx::Transpose[perm=[0, 1, 2, 4, 3, 5], onnx_name="/linear_stages.1/w1/Transpose_1"](%/linear_stages.1/w1/Gather_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Reshape_2_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w1/Reshape_2"](%/linear_stages.1/w1/Transpose_1_output_0, %/linear_stages.1/w1/Concat_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Mul_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w1/Mul_1"](%/linear_stages.1/w1/Add_output_0, %/linear_stages.1/w1/Add_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1178 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_4_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_4"](%/linear_stages.1/w1/Gather_output_0, %onnx::Unsqueeze_1178), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_1180 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_5_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_5"](%/linear_stages.1/w1/Gather_1_output_0, %onnx::Unsqueeze_1180), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.1/w1/Constant_49_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/w1/Constant_49"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_1184 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_6_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_6"](%/linear_stages.1/w1/Mul_1_output_0, %onnx::Unsqueeze_1184), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.1/w1/Concat_4_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w1/Concat_4"](%/linear_stages.1/w1/Unsqueeze_4_output_0, %/linear_stages.1/w1/Unsqueeze_5_output_0, %/linear_stages.1/w1/Constant_49_output_0, %/linear_stages.1/w1/Unsqueeze_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Reshape_3_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w1/Reshape_3"](%/linear_stages.1/w1/Reshape_2_output_0, %/linear_stages.1/w1/Concat_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1188 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_7_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_7"](%/linear_stages.1/w1/Gather_output_0, %onnx::Unsqueeze_1188), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.1/w1/Constant_50_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_50"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.1/w1/Constant_51_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/w1/Constant_51"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_1194 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_8_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_8"](%/linear_stages.1/w1/Mul_1_output_0, %onnx::Unsqueeze_1194), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.1/w1/Concat_5_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w1/Concat_5"](%/linear_stages.1/w1/Unsqueeze_7_output_0, %/linear_stages.1/w1/Constant_50_output_0, %/linear_stages.1/w1/Constant_51_output_0, %/linear_stages.1/w1/Unsqueeze_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Reshape_4_output_0 : Float(*, *, *, *, strides=[225, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w1/Reshape_4"](%/linear_stages.1/atten_conv1/sigmoid/Sigmoid_output_0, %/linear_stages.1/w1/Concat_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Mul_2_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w1/Mul_2"](%/linear_stages.1/w1/Reshape_3_output_0, %/linear_stages.1/w1/Reshape_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Constant_52_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_52"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Mul_3_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w1/Mul_3"](%/linear_stages.1/w1/Gather_1_output_0, %/linear_stages.1/w1/Constant_52_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Constant_53_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_53"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Mul_4_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w1/Mul_4"](%/linear_stages.1/w1/Mul_3_output_0, %/linear_stages.1/w1/Constant_53_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1203 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_9_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_9"](%/linear_stages.1/w1/Gather_output_0, %onnx::Unsqueeze_1203), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_1205 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_10_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_10"](%/linear_stages.1/w1/Mul_4_output_0, %onnx::Unsqueeze_1205), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_1207 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_11_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_11"](%/linear_stages.1/w1/Mul_1_output_0, %onnx::Unsqueeze_1207), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.1/w1/Concat_6_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w1/Concat_6"](%/linear_stages.1/w1/Unsqueeze_9_output_0, %/linear_stages.1/w1/Unsqueeze_10_output_0, %/linear_stages.1/w1/Unsqueeze_11_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Reshape_5_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w1/Reshape_5"](%/linear_stages.1/w1/Mul_2_output_0, %/linear_stages.1/w1/Concat_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Transpose_2_output_0 : Float(*, *, *, strides=[57600, 1, 25], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.1/w1/Transpose_2"](%/linear_stages.1/w1/Reshape_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.1/w1/MatMul_output_0 : Float(*, *, 256, strides=[6400, 256, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/linear_stages.1/w1/MatMul"](%/linear_stages.1/w1/Transpose_2_output_0, %onnx::MatMul_2126), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.1/w1/Transpose_3_output_0 : Float(*, 256, *, strides=[6400, 1, 256], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.1/w1/Transpose_3"](%/linear_stages.1/w1/MatMul_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.1/w1/Col2Im_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Col2Im[dilations=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.1/w1/Col2Im"](%/linear_stages.1/w1/Transpose_3_output_0, %onnx::Col2Im_299, %onnx::Col2Im_139), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4874:0
  %/linear_stages.1/w1/Add_6_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_6"](%/linear_stages.1/w1/Col2Im_output_0, %onnx::Add_2127), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:170:0
  %/linear_stages.1/w1/Shape_8_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_8"](%/linear_stages.1/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Constant_54_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_54"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Gather_10_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_10"](%/linear_stages.1/w1/Shape_8_output_0, %/linear_stages.1/w1/Constant_54_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Shape_9_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_9"](%/linear_stages.1/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Constant_55_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_55"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Gather_11_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_11"](%/linear_stages.1/w1/Shape_9_output_0, %/linear_stages.1/w1/Constant_55_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Shape_10_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_10"](%/linear_stages.1/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Constant_56_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w1/Constant_56"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Gather_12_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_12"](%/linear_stages.1/w1/Shape_10_output_0, %/linear_stages.1/w1/Constant_56_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Shape_11_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_11"](%/linear_stages.1/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Constant_57_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_57"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Gather_13_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_13"](%/linear_stages.1/w1/Shape_11_output_0, %/linear_stages.1/w1/Constant_57_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w1/Constant_58_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_58"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w1/Sub_4_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w1/Sub_4"](%/linear_stages.1/w1/Gather_12_output_0, %/linear_stages.1/w1/Constant_58_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w1/Constant_59_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_59"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w1/Add_7_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_7"](%/linear_stages.1/w1/Sub_4_output_0, %/linear_stages.1/w1/Constant_59_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w1/Constant_60_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_60"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w1/Sub_5_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w1/Sub_5"](%/linear_stages.1/w1/Gather_13_output_0, %/linear_stages.1/w1/Constant_60_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w1/Constant_61_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_61"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w1/Add_8_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_8"](%/linear_stages.1/w1/Sub_5_output_0, %/linear_stages.1/w1/Constant_61_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w1/Shape_12_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_12"](%/linear_stages.1/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_62_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w1/Constant_62"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Gather_14_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_14"](%/linear_stages.1/w1/Shape_12_output_0, %/linear_stages.1/w1/Constant_62_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Shape_13_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_13"](%/linear_stages.1/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_63_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_63"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Gather_15_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_15"](%/linear_stages.1/w1/Shape_13_output_0, %/linear_stages.1/w1/Constant_63_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_64_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_64"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Add_9_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_9"](%/linear_stages.1/w1/Gather_14_output_0, %/linear_stages.1/w1/Constant_64_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_65_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w1/Constant_65"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Sub_6_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w1/Sub_6"](%/linear_stages.1/w1/Add_9_output_0, %/linear_stages.1/w1/Constant_65_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_66_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_66"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_67_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_67"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Range_2_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.1/w1/Range_2"](%/linear_stages.1/w1/Constant_66_output_0, %/linear_stages.1/w1/Sub_6_output_0, %/linear_stages.1/w1/Constant_67_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_68_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_68"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Unsqueeze_12_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_12"](%/linear_stages.1/w1/Range_2_output_0, %/linear_stages.1/w1/Constant_68_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_69_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.1/w1/Constant_69"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Add_10_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_10"](%/linear_stages.1/w1/Unsqueeze_12_output_0, %/linear_stages.1/w1/Constant_69_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_70_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_70"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Add_11_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_11"](%/linear_stages.1/w1/Gather_15_output_0, %/linear_stages.1/w1/Constant_70_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_71_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w1/Constant_71"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Sub_7_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w1/Sub_7"](%/linear_stages.1/w1/Add_11_output_0, %/linear_stages.1/w1/Constant_71_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_72_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_72"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_73_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_73"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Range_3_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.1/w1/Range_3"](%/linear_stages.1/w1/Constant_72_output_0, %/linear_stages.1/w1/Sub_7_output_0, %/linear_stages.1/w1/Constant_73_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_74_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_74"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Unsqueeze_13_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_13"](%/linear_stages.1/w1/Range_3_output_0, %/linear_stages.1/w1/Constant_74_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_75_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.1/w1/Constant_75"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Add_12_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_12"](%/linear_stages.1/w1/Unsqueeze_13_output_0, %/linear_stages.1/w1/Constant_75_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Shape_14_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_14"](%/linear_stages.1/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_76_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_76"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Gather_16_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_16"](%/linear_stages.1/w1/Shape_14_output_0, %/linear_stages.1/w1/Constant_76_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Shape_15_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w1/Shape_15"](%/linear_stages.1/w1/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_77_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_77"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Gather_17_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w1/Gather_17"](%/linear_stages.1/w1/Shape_15_output_0, %/linear_stages.1/w1/Constant_77_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_78_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/w1/Constant_78"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Mul_5_output_0 : Long(device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w1/Mul_5"](%/linear_stages.1/w1/Gather_17_output_0, %/linear_stages.1/w1/Constant_78_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_79_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_79"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Unsqueeze_14_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_14"](%/linear_stages.1/w1/Gather_16_output_0, %/linear_stages.1/w1/Constant_79_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_80_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w1/Constant_80"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Unsqueeze_15_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_15"](%/linear_stages.1/w1/Mul_5_output_0, %/linear_stages.1/w1/Constant_80_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_81_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w1/Constant_81"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Concat_7_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w1/Concat_7"](%/linear_stages.1/w1/Unsqueeze_14_output_0, %/linear_stages.1/w1/Unsqueeze_15_output_0, %/linear_stages.1/w1/Constant_81_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Constant_82_output_0 : Long(8, strides=[1], device=cpu) = onnx::Constant[value= 0  0  0  0  0  0  0  0 [ CPULongType{8} ], onnx_name="/linear_stages.1/w1/Constant_82"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Pad_2_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pad[onnx_name="/linear_stages.1/w1/Pad_2"](%/linear_stages.1/w1/Pad_output_0, %/linear_stages.1/w1/Constant_82_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Gather_18_output_0 : Float(*, *, 3, *, *, device=cpu) = onnx::Gather[axis=2, onnx_name="/linear_stages.1/w1/Gather_18"](%/linear_stages.1/w1/Pad_2_output_0, %/linear_stages.1/w1/Add_10_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Gather_19_output_0 : Float(*, *, 3, *, 3, *, device=cpu) = onnx::Gather[axis=4, onnx_name="/linear_stages.1/w1/Gather_19"](%/linear_stages.1/w1/Gather_18_output_0, %/linear_stages.1/w1/Add_12_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Transpose_4_output_0 : Float(*, *, 3, 3, *, *, device=cpu) = onnx::Transpose[perm=[0, 1, 2, 4, 3, 5], onnx_name="/linear_stages.1/w1/Transpose_4"](%/linear_stages.1/w1/Gather_19_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Reshape_6_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w1/Reshape_6"](%/linear_stages.1/w1/Transpose_4_output_0, %/linear_stages.1/w1/Concat_7_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w1/Mul_6_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w1/Mul_6"](%/linear_stages.1/w1/Add_7_output_0, %/linear_stages.1/w1/Add_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1299 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_16_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_16"](%/linear_stages.1/w1/Gather_10_output_0, %onnx::Unsqueeze_1299), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_1301 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_17_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_17"](%/linear_stages.1/w1/Gather_11_output_0, %onnx::Unsqueeze_1301), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.1/w1/Constant_83_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/w1/Constant_83"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_1305 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_18_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_18"](%/linear_stages.1/w1/Mul_6_output_0, %onnx::Unsqueeze_1305), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.1/w1/Concat_8_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w1/Concat_8"](%/linear_stages.1/w1/Unsqueeze_16_output_0, %/linear_stages.1/w1/Unsqueeze_17_output_0, %/linear_stages.1/w1/Constant_83_output_0, %/linear_stages.1/w1/Unsqueeze_18_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Reshape_7_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w1/Reshape_7"](%/linear_stages.1/w1/Reshape_6_output_0, %/linear_stages.1/w1/Concat_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1309 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_19_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_19"](%/linear_stages.1/w1/Gather_10_output_0, %onnx::Unsqueeze_1309), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.1/w1/Constant_84_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w1/Constant_84"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.1/w1/Constant_85_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/w1/Constant_85"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_1315 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_20_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_20"](%/linear_stages.1/w1/Mul_6_output_0, %onnx::Unsqueeze_1315), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.1/w1/Concat_9_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w1/Concat_9"](%/linear_stages.1/w1/Unsqueeze_19_output_0, %/linear_stages.1/w1/Constant_84_output_0, %/linear_stages.1/w1/Constant_85_output_0, %/linear_stages.1/w1/Unsqueeze_20_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Reshape_8_output_0 : Float(*, *, *, *, strides=[225, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w1/Reshape_8"](%/linear_stages.1/atten_conv1/sigmoid/Sigmoid_output_0, %/linear_stages.1/w1/Concat_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Mul_7_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w1/Mul_7"](%/linear_stages.1/w1/Reshape_7_output_0, %/linear_stages.1/w1/Reshape_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Constant_86_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_86"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Mul_8_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w1/Mul_8"](%/linear_stages.1/w1/Gather_11_output_0, %/linear_stages.1/w1/Constant_86_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Constant_87_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w1/Constant_87"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Mul_9_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w1/Mul_9"](%/linear_stages.1/w1/Mul_8_output_0, %/linear_stages.1/w1/Constant_87_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1324 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_21_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_21"](%/linear_stages.1/w1/Gather_10_output_0, %onnx::Unsqueeze_1324), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_1326 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_22_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_22"](%/linear_stages.1/w1/Mul_9_output_0, %onnx::Unsqueeze_1326), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %onnx::Unsqueeze_1328 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w1/Unsqueeze_23_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w1/Unsqueeze_23"](%/linear_stages.1/w1/Mul_6_output_0, %onnx::Unsqueeze_1328), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1
  %/linear_stages.1/w1/Concat_10_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w1/Concat_10"](%/linear_stages.1/w1/Unsqueeze_21_output_0, %/linear_stages.1/w1/Unsqueeze_22_output_0, %/linear_stages.1/w1/Unsqueeze_23_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Reshape_9_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w1/Reshape_9"](%/linear_stages.1/w1/Mul_7_output_0, %/linear_stages.1/w1/Concat_10_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w1/Transpose_5_output_0 : Float(*, *, *, strides=[57600, 1, 25], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.1/w1/Transpose_5"](%/linear_stages.1/w1/Reshape_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.1/w1/MatMul_1_output_0 : Float(*, *, 256, strides=[6400, 256, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/linear_stages.1/w1/MatMul_1"](%/linear_stages.1/w1/Transpose_5_output_0, %onnx::MatMul_2137), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.1/w1/Transpose_6_output_0 : Float(*, 256, *, strides=[6400, 1, 256], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.1/w1/Transpose_6"](%/linear_stages.1/w1/MatMul_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.1/w1/Col2Im_1_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Col2Im[dilations=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.1/w1/Col2Im_1"](%/linear_stages.1/w1/Transpose_6_output_0, %onnx::Col2Im_299, %onnx::Col2Im_139), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4874:0
  %/linear_stages.1/w1/Add_13_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_13"](%/linear_stages.1/w1/Col2Im_1_output_0, %onnx::Add_2138), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:170:0
  %/linear_stages.1/w1/Add_14_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w1/Add_14"](%/linear_stages.1/w1/Add_6_output_0, %/linear_stages.1/w1/Add_13_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:187:0
  %/linear_stages.1/batch_norm1/BatchNormalization_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::BatchNormalization[epsilon=1.0000000000000001e-05, momentum=0.90000000000000002, training_mode=0, onnx_name="/linear_stages.1/batch_norm1/BatchNormalization"](%/linear_stages.1/w1/Add_14_output_0, %linear_stages.1.batch_norm1.weight, %linear_stages.1.batch_norm1.bias, %linear_stages.1.batch_norm1.running_mean, %linear_stages.1.batch_norm1.running_var), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/torch.nn.modules.batchnorm.BatchNorm2d::batch_norm1 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:2512:0
  %/linear_stages.1/relu/Relu_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/linear_stages.1/relu/Relu"](%/linear_stages.1/batch_norm1/BatchNormalization_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/torch.nn.modules.activation.ReLU::relu # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1498:0
  %/linear_stages.1/atten_conv2/avgpool/GlobalAveragePool_output_0 : Float(*, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=1, device=cpu) = onnx::GlobalAveragePool[onnx_name="/linear_stages.1/atten_conv2/avgpool/GlobalAveragePool"](%/linear_stages.1/relu/Relu_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.pooling.AdaptiveAvgPool2d::avgpool # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1260:0
  %/linear_stages.1/atten_conv2/fc/Conv_output_0 : Float(*, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.1/atten_conv2/fc/Conv"](%/linear_stages.1/atten_conv2/avgpool/GlobalAveragePool_output_0, %onnx::Conv_1987, %onnx::Conv_1988), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.conv.Conv2d::fc # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\conv.py:454:0
  %/linear_stages.1/atten_conv2/relu/Relu_output_0 : Float(*, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/linear_stages.1/atten_conv2/relu/Relu"](%/linear_stages.1/atten_conv2/fc/Conv_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.activation.ReLU::relu # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1498:0
  %/linear_stages.1/atten_conv2/position_fc/Conv_output_0 : Float(*, 225, 1, 1, strides=[225, 1, 1, 1], requires_grad=0, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.1/atten_conv2/position_fc/Conv"](%/linear_stages.1/atten_conv2/relu/Relu_output_0, %linear_stages.1.atten_conv2.position_fc.weight, %linear_stages.1.atten_conv2.position_fc.bias), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.conv.Conv2d::position_fc # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\conv.py:454:0
  %/linear_stages.1/atten_conv2/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/atten_conv2/Shape"](%/linear_stages.1/atten_conv2/relu/Relu_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.1/atten_conv2/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/atten_conv2/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.1/atten_conv2/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/atten_conv2/Gather"](%/linear_stages.1/atten_conv2/Shape_output_0, %/linear_stages.1/atten_conv2/Constant_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %onnx::Unsqueeze_1358 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/atten_conv2/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/atten_conv2/Unsqueeze"](%/linear_stages.1/atten_conv2/Gather_output_0, %onnx::Unsqueeze_1358), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2
  %/linear_stages.1/atten_conv2/Constant_1_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/atten_conv2/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2
  %/linear_stages.1/atten_conv2/Constant_2_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={5}, onnx_name="/linear_stages.1/atten_conv2/Constant_2"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2
  %/linear_stages.1/atten_conv2/Constant_3_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={5}, onnx_name="/linear_stages.1/atten_conv2/Constant_3"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2
  %/linear_stages.1/atten_conv2/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/atten_conv2/Concat"](%/linear_stages.1/atten_conv2/Unsqueeze_output_0, %/linear_stages.1/atten_conv2/Constant_1_output_0, %/linear_stages.1/atten_conv2/Constant_2_output_0, %/linear_stages.1/atten_conv2/Constant_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.1/atten_conv2/Reshape_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/atten_conv2/Reshape"](%/linear_stages.1/atten_conv2/position_fc/Conv_output_0, %/linear_stages.1/atten_conv2/Concat_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/linear_stages.1/atten_conv2/Constant_4_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={30}, onnx_name="/linear_stages.1/atten_conv2/Constant_4"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:235:0
  %/linear_stages.1/atten_conv2/Div_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Div[onnx_name="/linear_stages.1/atten_conv2/Div"](%/linear_stages.1/atten_conv2/Reshape_output_0, %/linear_stages.1/atten_conv2/Constant_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:235:0
  %/linear_stages.1/atten_conv2/sigmoid/Sigmoid_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Sigmoid[onnx_name="/linear_stages.1/atten_conv2/sigmoid/Sigmoid"](%/linear_stages.1/atten_conv2/Div_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.activation.Sigmoid::sigmoid # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\activation.py:301:0
  %/linear_stages.1/w2/Constant_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w2/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w2/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={9223372036854775807}, onnx_name="/linear_stages.1/w2/Constant_2"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Slice_output_0 : Float(*, 256, 1, 5, device=cpu) = onnx::Slice[onnx_name="/linear_stages.1/w2/Slice"](%/linear_stages.1/relu/Relu_output_0, %/linear_stages.1/w2/Constant_1_output_0, %/linear_stages.1/w2/Constant_2_output_0, %/linear_stages.1/w2/Constant_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_3_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w2/Constant_3"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_4_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_4"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_5_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_5"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Slice_1_output_0 : Float(*, 256, 1, 5, device=cpu) = onnx::Slice[onnx_name="/linear_stages.1/w2/Slice_1"](%/linear_stages.1/relu/Relu_output_0, %/linear_stages.1/w2/Constant_4_output_0, %/linear_stages.1/w2/Constant_5_output_0, %/linear_stages.1/w2/Constant_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Concat_output_0 : Float(*, 256, 7, 5, device=cpu) = onnx::Concat[axis=2, onnx_name="/linear_stages.1/w2/Concat"](%/linear_stages.1/w2/Slice_output_0, %/linear_stages.1/relu/Relu_output_0, %/linear_stages.1/w2/Slice_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_6_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_6"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_7_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w2/Constant_7"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_8_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={9223372036854775807}, onnx_name="/linear_stages.1/w2/Constant_8"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Slice_2_output_0 : Float(*, 256, 7, 1, device=cpu) = onnx::Slice[onnx_name="/linear_stages.1/w2/Slice_2"](%/linear_stages.1/w2/Concat_output_0, %/linear_stages.1/w2/Constant_7_output_0, %/linear_stages.1/w2/Constant_8_output_0, %/linear_stages.1/w2/Constant_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_9_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_9"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_10_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_10"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_11_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_11"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Slice_3_output_0 : Float(*, 256, 7, 1, device=cpu) = onnx::Slice[onnx_name="/linear_stages.1/w2/Slice_3"](%/linear_stages.1/w2/Concat_output_0, %/linear_stages.1/w2/Constant_10_output_0, %/linear_stages.1/w2/Constant_11_output_0, %/linear_stages.1/w2/Constant_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Concat_1_output_0 : Float(*, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=1, device=cpu) = onnx::Concat[axis=3, onnx_name="/linear_stages.1/w2/Concat_1"](%/linear_stages.1/w2/Slice_2_output_0, %/linear_stages.1/w2/Concat_output_0, %/linear_stages.1/w2/Slice_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_12_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={4}, onnx_name="/linear_stages.1/w2/Constant_12"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_13_output_0 : Long(4, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value= 1  1  1  1 [ CPULongType{4} ], onnx_name="/linear_stages.1/w2/Constant_13"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/ConstantOfShape_output_0 : Long(4, strides=[1], device=cpu) = onnx::ConstantOfShape[value={0}, onnx_name="/linear_stages.1/w2/ConstantOfShape"](%/linear_stages.1/w2/Constant_12_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Concat_2_output_0 : Long(8, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w2/Concat_2"](%/linear_stages.1/w2/Constant_13_output_0, %/linear_stages.1/w2/ConstantOfShape_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_14_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=-1  2 [ CPULongType{2} ], onnx_name="/linear_stages.1/w2/Constant_14"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Reshape_output_0 : Long(4, 2, strides=[2, 1], device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w2/Reshape"](%/linear_stages.1/w2/Concat_2_output_0, %/linear_stages.1/w2/Constant_14_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_15_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_15"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_16_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w2/Constant_16"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_17_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-9223372036854775807}, onnx_name="/linear_stages.1/w2/Constant_17"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_18_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w2/Constant_18"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Slice_4_output_0 : Long(4, 2, strides=[2, 1], device=cpu) = onnx::Slice[onnx_name="/linear_stages.1/w2/Slice_4"](%/linear_stages.1/w2/Reshape_output_0, %/linear_stages.1/w2/Constant_16_output_0, %/linear_stages.1/w2/Constant_17_output_0, %/linear_stages.1/w2/Constant_15_output_0, %/linear_stages.1/w2/Constant_18_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Transpose_output_0 : Long(2, 4, strides=[4, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/linear_stages.1/w2/Transpose"](%/linear_stages.1/w2/Slice_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Constant_19_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w2/Constant_19"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Reshape_1_output_0 : Long(8, strides=[1], device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w2/Reshape_1"](%/linear_stages.1/w2/Transpose_output_0, %/linear_stages.1/w2/Constant_19_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Cast_output_0 : Long(8, strides=[1], device=cpu) = onnx::Cast[to=7, onnx_name="/linear_stages.1/w2/Cast"](%/linear_stages.1/w2/Reshape_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Pad_output_0 : Float(*, *, *, *, strides=[12544, 49, 7, 1], requires_grad=1, device=cpu) = onnx::Pad[mode="edge", onnx_name="/linear_stages.1/w2/Pad"](%/linear_stages.1/relu/Relu_output_0, %/linear_stages.1/w2/Cast_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/linear_stages.1/w2/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape"](%/linear_stages.1/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Constant_20_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_20"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather"](%/linear_stages.1/w2/Shape_output_0, %/linear_stages.1/w2/Constant_20_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_1"](%/linear_stages.1/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Constant_21_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_21"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_1"](%/linear_stages.1/w2/Shape_1_output_0, %/linear_stages.1/w2/Constant_21_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_2"](%/linear_stages.1/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Constant_22_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w2/Constant_22"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_2"](%/linear_stages.1/w2/Shape_2_output_0, %/linear_stages.1/w2/Constant_22_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Shape_3_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_3"](%/linear_stages.1/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Constant_23_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_23"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Gather_3_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_3"](%/linear_stages.1/w2/Shape_3_output_0, %/linear_stages.1/w2/Constant_23_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Constant_24_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_24"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w2/Sub_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w2/Sub"](%/linear_stages.1/w2/Gather_2_output_0, %/linear_stages.1/w2/Constant_24_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w2/Constant_25_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_25"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w2/Add_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add"](%/linear_stages.1/w2/Sub_output_0, %/linear_stages.1/w2/Constant_25_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w2/Constant_26_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_26"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w2/Sub_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w2/Sub_1"](%/linear_stages.1/w2/Gather_3_output_0, %/linear_stages.1/w2/Constant_26_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w2/Constant_27_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_27"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w2/Add_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_1"](%/linear_stages.1/w2/Sub_1_output_0, %/linear_stages.1/w2/Constant_27_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w2/Shape_4_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_4"](%/linear_stages.1/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_28_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w2/Constant_28"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Gather_4_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_4"](%/linear_stages.1/w2/Shape_4_output_0, %/linear_stages.1/w2/Constant_28_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Shape_5_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_5"](%/linear_stages.1/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_29_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_29"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Gather_5_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_5"](%/linear_stages.1/w2/Shape_5_output_0, %/linear_stages.1/w2/Constant_29_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_30_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_30"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Add_2_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_2"](%/linear_stages.1/w2/Gather_4_output_0, %/linear_stages.1/w2/Constant_30_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_31_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w2/Constant_31"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Sub_2_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w2/Sub_2"](%/linear_stages.1/w2/Add_2_output_0, %/linear_stages.1/w2/Constant_31_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_32_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_32"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_33_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_33"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Range_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.1/w2/Range"](%/linear_stages.1/w2/Constant_32_output_0, %/linear_stages.1/w2/Sub_2_output_0, %/linear_stages.1/w2/Constant_33_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_34_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_34"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Unsqueeze_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze"](%/linear_stages.1/w2/Range_output_0, %/linear_stages.1/w2/Constant_34_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_35_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.1/w2/Constant_35"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Add_3_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_3"](%/linear_stages.1/w2/Unsqueeze_output_0, %/linear_stages.1/w2/Constant_35_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_36_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_36"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Add_4_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_4"](%/linear_stages.1/w2/Gather_5_output_0, %/linear_stages.1/w2/Constant_36_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_37_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w2/Constant_37"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Sub_3_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w2/Sub_3"](%/linear_stages.1/w2/Add_4_output_0, %/linear_stages.1/w2/Constant_37_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_38_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_38"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_39_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_39"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Range_1_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.1/w2/Range_1"](%/linear_stages.1/w2/Constant_38_output_0, %/linear_stages.1/w2/Sub_3_output_0, %/linear_stages.1/w2/Constant_39_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_40_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_40"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Unsqueeze_1_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_1"](%/linear_stages.1/w2/Range_1_output_0, %/linear_stages.1/w2/Constant_40_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_41_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.1/w2/Constant_41"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Add_5_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_5"](%/linear_stages.1/w2/Unsqueeze_1_output_0, %/linear_stages.1/w2/Constant_41_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Shape_6_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_6"](%/linear_stages.1/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_42_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_42"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Gather_6_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_6"](%/linear_stages.1/w2/Shape_6_output_0, %/linear_stages.1/w2/Constant_42_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Shape_7_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_7"](%/linear_stages.1/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_43_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_43"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Gather_7_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_7"](%/linear_stages.1/w2/Shape_7_output_0, %/linear_stages.1/w2/Constant_43_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_44_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/w2/Constant_44"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Mul_output_0 : Long(device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w2/Mul"](%/linear_stages.1/w2/Gather_7_output_0, %/linear_stages.1/w2/Constant_44_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_45_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_45"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_2"](%/linear_stages.1/w2/Gather_6_output_0, %/linear_stages.1/w2/Constant_45_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_46_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_46"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Unsqueeze_3_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_3"](%/linear_stages.1/w2/Mul_output_0, %/linear_stages.1/w2/Constant_46_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_47_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w2/Constant_47"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Concat_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w2/Concat_3"](%/linear_stages.1/w2/Unsqueeze_2_output_0, %/linear_stages.1/w2/Unsqueeze_3_output_0, %/linear_stages.1/w2/Constant_47_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_48_output_0 : Long(8, strides=[1], device=cpu) = onnx::Constant[value= 0  0  0  0  0  0  0  0 [ CPULongType{8} ], onnx_name="/linear_stages.1/w2/Constant_48"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Pad_1_output_0 : Float(*, 256, 7, 7, device=cpu) = onnx::Pad[onnx_name="/linear_stages.1/w2/Pad_1"](%/linear_stages.1/w2/Concat_1_output_0, %/linear_stages.1/w2/Constant_48_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Gather_8_output_0 : Float(*, 256, 3, *, 7, device=cpu) = onnx::Gather[axis=2, onnx_name="/linear_stages.1/w2/Gather_8"](%/linear_stages.1/w2/Pad_1_output_0, %/linear_stages.1/w2/Add_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Gather_9_output_0 : Float(*, 256, 3, *, 3, *, device=cpu) = onnx::Gather[axis=4, onnx_name="/linear_stages.1/w2/Gather_9"](%/linear_stages.1/w2/Gather_8_output_0, %/linear_stages.1/w2/Add_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Transpose_1_output_0 : Float(*, 256, 3, 3, *, *, device=cpu) = onnx::Transpose[perm=[0, 1, 2, 4, 3, 5], onnx_name="/linear_stages.1/w2/Transpose_1"](%/linear_stages.1/w2/Gather_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Reshape_2_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w2/Reshape_2"](%/linear_stages.1/w2/Transpose_1_output_0, %/linear_stages.1/w2/Concat_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Mul_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w2/Mul_1"](%/linear_stages.1/w2/Add_output_0, %/linear_stages.1/w2/Add_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1485 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_4_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_4"](%/linear_stages.1/w2/Gather_output_0, %onnx::Unsqueeze_1485), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1487 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_5_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_5"](%/linear_stages.1/w2/Gather_1_output_0, %onnx::Unsqueeze_1487), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.1/w2/Constant_49_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/w2/Constant_49"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1491 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_6_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_6"](%/linear_stages.1/w2/Mul_1_output_0, %onnx::Unsqueeze_1491), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.1/w2/Concat_4_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w2/Concat_4"](%/linear_stages.1/w2/Unsqueeze_4_output_0, %/linear_stages.1/w2/Unsqueeze_5_output_0, %/linear_stages.1/w2/Constant_49_output_0, %/linear_stages.1/w2/Unsqueeze_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Reshape_3_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w2/Reshape_3"](%/linear_stages.1/w2/Reshape_2_output_0, %/linear_stages.1/w2/Concat_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1495 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_7_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_7"](%/linear_stages.1/w2/Gather_output_0, %onnx::Unsqueeze_1495), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.1/w2/Constant_50_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_50"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.1/w2/Constant_51_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/w2/Constant_51"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1501 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_8_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_8"](%/linear_stages.1/w2/Mul_1_output_0, %onnx::Unsqueeze_1501), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.1/w2/Concat_5_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w2/Concat_5"](%/linear_stages.1/w2/Unsqueeze_7_output_0, %/linear_stages.1/w2/Constant_50_output_0, %/linear_stages.1/w2/Constant_51_output_0, %/linear_stages.1/w2/Unsqueeze_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Reshape_4_output_0 : Float(*, *, *, *, strides=[225, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w2/Reshape_4"](%/linear_stages.1/atten_conv2/sigmoid/Sigmoid_output_0, %/linear_stages.1/w2/Concat_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Mul_2_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w2/Mul_2"](%/linear_stages.1/w2/Reshape_3_output_0, %/linear_stages.1/w2/Reshape_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Constant_52_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_52"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Mul_3_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w2/Mul_3"](%/linear_stages.1/w2/Gather_1_output_0, %/linear_stages.1/w2/Constant_52_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Constant_53_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_53"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Mul_4_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w2/Mul_4"](%/linear_stages.1/w2/Mul_3_output_0, %/linear_stages.1/w2/Constant_53_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1510 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_9_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_9"](%/linear_stages.1/w2/Gather_output_0, %onnx::Unsqueeze_1510), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1512 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_10_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_10"](%/linear_stages.1/w2/Mul_4_output_0, %onnx::Unsqueeze_1512), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1514 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_11_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_11"](%/linear_stages.1/w2/Mul_1_output_0, %onnx::Unsqueeze_1514), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.1/w2/Concat_6_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w2/Concat_6"](%/linear_stages.1/w2/Unsqueeze_9_output_0, %/linear_stages.1/w2/Unsqueeze_10_output_0, %/linear_stages.1/w2/Unsqueeze_11_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Reshape_5_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w2/Reshape_5"](%/linear_stages.1/w2/Mul_2_output_0, %/linear_stages.1/w2/Concat_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Transpose_2_output_0 : Float(*, *, *, strides=[57600, 1, 25], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.1/w2/Transpose_2"](%/linear_stages.1/w2/Reshape_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.1/w2/MatMul_output_0 : Float(*, *, 256, strides=[6400, 256, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/linear_stages.1/w2/MatMul"](%/linear_stages.1/w2/Transpose_2_output_0, %onnx::MatMul_2156), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.1/w2/Transpose_3_output_0 : Float(*, 256, *, strides=[6400, 1, 256], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.1/w2/Transpose_3"](%/linear_stages.1/w2/MatMul_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.1/w2/Col2Im_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Col2Im[dilations=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.1/w2/Col2Im"](%/linear_stages.1/w2/Transpose_3_output_0, %onnx::Col2Im_299, %onnx::Col2Im_139), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4874:0
  %/linear_stages.1/w2/Add_6_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_6"](%/linear_stages.1/w2/Col2Im_output_0, %onnx::Add_2157), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:170:0
  %/linear_stages.1/w2/Shape_8_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_8"](%/linear_stages.1/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Constant_54_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_54"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Gather_10_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_10"](%/linear_stages.1/w2/Shape_8_output_0, %/linear_stages.1/w2/Constant_54_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Shape_9_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_9"](%/linear_stages.1/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Constant_55_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_55"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Gather_11_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_11"](%/linear_stages.1/w2/Shape_9_output_0, %/linear_stages.1/w2/Constant_55_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Shape_10_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_10"](%/linear_stages.1/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Constant_56_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w2/Constant_56"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Gather_12_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_12"](%/linear_stages.1/w2/Shape_10_output_0, %/linear_stages.1/w2/Constant_56_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Shape_11_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_11"](%/linear_stages.1/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Constant_57_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_57"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Gather_13_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_13"](%/linear_stages.1/w2/Shape_11_output_0, %/linear_stages.1/w2/Constant_57_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/linear_stages.1/w2/Constant_58_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_58"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w2/Sub_4_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w2/Sub_4"](%/linear_stages.1/w2/Gather_12_output_0, %/linear_stages.1/w2/Constant_58_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w2/Constant_59_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_59"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w2/Add_7_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_7"](%/linear_stages.1/w2/Sub_4_output_0, %/linear_stages.1/w2/Constant_59_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/linear_stages.1/w2/Constant_60_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_60"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w2/Sub_5_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w2/Sub_5"](%/linear_stages.1/w2/Gather_13_output_0, %/linear_stages.1/w2/Constant_60_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w2/Constant_61_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_61"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w2/Add_8_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_8"](%/linear_stages.1/w2/Sub_5_output_0, %/linear_stages.1/w2/Constant_61_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/linear_stages.1/w2/Shape_12_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_12"](%/linear_stages.1/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_62_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w2/Constant_62"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Gather_14_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_14"](%/linear_stages.1/w2/Shape_12_output_0, %/linear_stages.1/w2/Constant_62_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Shape_13_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_13"](%/linear_stages.1/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_63_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_63"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Gather_15_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_15"](%/linear_stages.1/w2/Shape_13_output_0, %/linear_stages.1/w2/Constant_63_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_64_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_64"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Add_9_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_9"](%/linear_stages.1/w2/Gather_14_output_0, %/linear_stages.1/w2/Constant_64_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_65_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w2/Constant_65"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Sub_6_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w2/Sub_6"](%/linear_stages.1/w2/Add_9_output_0, %/linear_stages.1/w2/Constant_65_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_66_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_66"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_67_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_67"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Range_2_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.1/w2/Range_2"](%/linear_stages.1/w2/Constant_66_output_0, %/linear_stages.1/w2/Sub_6_output_0, %/linear_stages.1/w2/Constant_67_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_68_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_68"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Unsqueeze_12_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_12"](%/linear_stages.1/w2/Range_2_output_0, %/linear_stages.1/w2/Constant_68_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_69_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.1/w2/Constant_69"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Add_10_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_10"](%/linear_stages.1/w2/Unsqueeze_12_output_0, %/linear_stages.1/w2/Constant_69_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_70_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_70"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Add_11_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_11"](%/linear_stages.1/w2/Gather_15_output_0, %/linear_stages.1/w2/Constant_70_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_71_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/linear_stages.1/w2/Constant_71"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Sub_7_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/linear_stages.1/w2/Sub_7"](%/linear_stages.1/w2/Add_11_output_0, %/linear_stages.1/w2/Constant_71_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_72_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_72"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_73_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_73"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Range_3_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/linear_stages.1/w2/Range_3"](%/linear_stages.1/w2/Constant_72_output_0, %/linear_stages.1/w2/Sub_7_output_0, %/linear_stages.1/w2/Constant_73_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_74_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_74"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Unsqueeze_13_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_13"](%/linear_stages.1/w2/Range_3_output_0, %/linear_stages.1/w2/Constant_74_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_75_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/linear_stages.1/w2/Constant_75"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Add_12_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_12"](%/linear_stages.1/w2/Unsqueeze_13_output_0, %/linear_stages.1/w2/Constant_75_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Shape_14_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_14"](%/linear_stages.1/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_76_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_76"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Gather_16_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_16"](%/linear_stages.1/w2/Shape_14_output_0, %/linear_stages.1/w2/Constant_76_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Shape_15_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/linear_stages.1/w2/Shape_15"](%/linear_stages.1/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_77_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_77"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Gather_17_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/linear_stages.1/w2/Gather_17"](%/linear_stages.1/w2/Shape_15_output_0, %/linear_stages.1/w2/Constant_77_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_78_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/w2/Constant_78"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Mul_5_output_0 : Long(device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w2/Mul_5"](%/linear_stages.1/w2/Gather_17_output_0, %/linear_stages.1/w2/Constant_78_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_79_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_79"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Unsqueeze_14_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_14"](%/linear_stages.1/w2/Gather_16_output_0, %/linear_stages.1/w2/Constant_79_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_80_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/linear_stages.1/w2/Constant_80"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Unsqueeze_15_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_15"](%/linear_stages.1/w2/Mul_5_output_0, %/linear_stages.1/w2/Constant_80_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_81_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/linear_stages.1/w2/Constant_81"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Concat_7_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w2/Concat_7"](%/linear_stages.1/w2/Unsqueeze_14_output_0, %/linear_stages.1/w2/Unsqueeze_15_output_0, %/linear_stages.1/w2/Constant_81_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Constant_82_output_0 : Long(8, strides=[1], device=cpu) = onnx::Constant[value= 0  0  0  0  0  0  0  0 [ CPULongType{8} ], onnx_name="/linear_stages.1/w2/Constant_82"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Pad_2_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pad[onnx_name="/linear_stages.1/w2/Pad_2"](%/linear_stages.1/w2/Pad_output_0, %/linear_stages.1/w2/Constant_82_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Gather_18_output_0 : Float(*, *, 3, *, *, device=cpu) = onnx::Gather[axis=2, onnx_name="/linear_stages.1/w2/Gather_18"](%/linear_stages.1/w2/Pad_2_output_0, %/linear_stages.1/w2/Add_10_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Gather_19_output_0 : Float(*, *, 3, *, 3, *, device=cpu) = onnx::Gather[axis=4, onnx_name="/linear_stages.1/w2/Gather_19"](%/linear_stages.1/w2/Gather_18_output_0, %/linear_stages.1/w2/Add_12_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Transpose_4_output_0 : Float(*, *, 3, 3, *, *, device=cpu) = onnx::Transpose[perm=[0, 1, 2, 4, 3, 5], onnx_name="/linear_stages.1/w2/Transpose_4"](%/linear_stages.1/w2/Gather_19_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Reshape_6_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w2/Reshape_6"](%/linear_stages.1/w2/Transpose_4_output_0, %/linear_stages.1/w2/Concat_7_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/linear_stages.1/w2/Mul_6_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w2/Mul_6"](%/linear_stages.1/w2/Add_7_output_0, %/linear_stages.1/w2/Add_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1606 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_16_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_16"](%/linear_stages.1/w2/Gather_10_output_0, %onnx::Unsqueeze_1606), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1608 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_17_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_17"](%/linear_stages.1/w2/Gather_11_output_0, %onnx::Unsqueeze_1608), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.1/w2/Constant_83_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/w2/Constant_83"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1612 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_18_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_18"](%/linear_stages.1/w2/Mul_6_output_0, %onnx::Unsqueeze_1612), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.1/w2/Concat_8_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w2/Concat_8"](%/linear_stages.1/w2/Unsqueeze_16_output_0, %/linear_stages.1/w2/Unsqueeze_17_output_0, %/linear_stages.1/w2/Constant_83_output_0, %/linear_stages.1/w2/Unsqueeze_18_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Reshape_7_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w2/Reshape_7"](%/linear_stages.1/w2/Reshape_6_output_0, %/linear_stages.1/w2/Concat_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1616 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_19_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_19"](%/linear_stages.1/w2/Gather_10_output_0, %onnx::Unsqueeze_1616), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.1/w2/Constant_84_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/linear_stages.1/w2/Constant_84"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.1/w2/Constant_85_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/linear_stages.1/w2/Constant_85"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1622 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_20_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_20"](%/linear_stages.1/w2/Mul_6_output_0, %onnx::Unsqueeze_1622), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.1/w2/Concat_9_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w2/Concat_9"](%/linear_stages.1/w2/Unsqueeze_19_output_0, %/linear_stages.1/w2/Constant_84_output_0, %/linear_stages.1/w2/Constant_85_output_0, %/linear_stages.1/w2/Unsqueeze_20_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Reshape_8_output_0 : Float(*, *, *, *, strides=[225, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w2/Reshape_8"](%/linear_stages.1/atten_conv2/sigmoid/Sigmoid_output_0, %/linear_stages.1/w2/Concat_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Mul_7_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w2/Mul_7"](%/linear_stages.1/w2/Reshape_7_output_0, %/linear_stages.1/w2/Reshape_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Constant_86_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_86"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Mul_8_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w2/Mul_8"](%/linear_stages.1/w2/Gather_11_output_0, %/linear_stages.1/w2/Constant_86_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Constant_87_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/linear_stages.1/w2/Constant_87"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Mul_9_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/linear_stages.1/w2/Mul_9"](%/linear_stages.1/w2/Mul_8_output_0, %/linear_stages.1/w2/Constant_87_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1631 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_21_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_21"](%/linear_stages.1/w2/Gather_10_output_0, %onnx::Unsqueeze_1631), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1633 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_22_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_22"](%/linear_stages.1/w2/Mul_9_output_0, %onnx::Unsqueeze_1633), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1635 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/linear_stages.1/w2/Unsqueeze_23_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/linear_stages.1/w2/Unsqueeze_23"](%/linear_stages.1/w2/Mul_6_output_0, %onnx::Unsqueeze_1635), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/linear_stages.1/w2/Concat_10_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/linear_stages.1/w2/Concat_10"](%/linear_stages.1/w2/Unsqueeze_21_output_0, %/linear_stages.1/w2/Unsqueeze_22_output_0, %/linear_stages.1/w2/Unsqueeze_23_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Reshape_9_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/linear_stages.1/w2/Reshape_9"](%/linear_stages.1/w2/Mul_7_output_0, %/linear_stages.1/w2/Concat_10_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/linear_stages.1/w2/Transpose_5_output_0 : Float(*, *, *, strides=[57600, 1, 25], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.1/w2/Transpose_5"](%/linear_stages.1/w2/Reshape_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.1/w2/MatMul_1_output_0 : Float(*, *, 256, strides=[6400, 256, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/linear_stages.1/w2/MatMul_1"](%/linear_stages.1/w2/Transpose_5_output_0, %onnx::MatMul_2167), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.1/w2/Transpose_6_output_0 : Float(*, 256, *, strides=[6400, 1, 256], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/linear_stages.1/w2/Transpose_6"](%/linear_stages.1/w2/MatMul_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/linear_stages.1/w2/Col2Im_1_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Col2Im[dilations=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/linear_stages.1/w2/Col2Im_1"](%/linear_stages.1/w2/Transpose_6_output_0, %onnx::Col2Im_299, %onnx::Col2Im_139), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4874:0
  %/linear_stages.1/w2/Add_13_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_13"](%/linear_stages.1/w2/Col2Im_1_output_0, %onnx::Add_2168), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:170:0
  %/linear_stages.1/w2/Add_14_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/w2/Add_14"](%/linear_stages.1/w2/Add_6_output_0, %/linear_stages.1/w2/Add_13_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:187:0
  %/linear_stages.1/batch_norm2/BatchNormalization_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::BatchNormalization[epsilon=1.0000000000000001e-05, momentum=0.90000000000000002, training_mode=0, onnx_name="/linear_stages.1/batch_norm2/BatchNormalization"](%/linear_stages.1/w2/Add_14_output_0, %linear_stages.1.batch_norm2.weight, %linear_stages.1.batch_norm2.bias, %linear_stages.1.batch_norm2.running_mean, %linear_stages.1.batch_norm2.running_var), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/torch.nn.modules.batchnorm.BatchNorm2d::batch_norm2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:2512:0
  %/linear_stages.1/relu_1/Relu_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/linear_stages.1/relu_1/Relu"](%/linear_stages.1/batch_norm2/BatchNormalization_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1/torch.nn.modules.activation.ReLU::relu # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1498:0
  %/linear_stages.1/Add_output_0 : Float(*, 256, 5, 5, strides=[6400, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/linear_stages.1/Add"](%/linear_stages.0/Add_output_0, %/linear_stages.1/relu_1/Relu_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.CNNBlock::linear_stages.1 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:128:0
  %/atten_conv2/avgpool/GlobalAveragePool_output_0 : Float(*, 256, 1, 1, strides=[256, 1, 1, 1], requires_grad=1, device=cpu) = onnx::GlobalAveragePool[onnx_name="/atten_conv2/avgpool/GlobalAveragePool"](%/linear_stages.1/Add_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.pooling.AdaptiveAvgPool2d::avgpool # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1260:0
  %/atten_conv2/fc/Conv_output_0 : Float(*, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/atten_conv2/fc/Conv"](%/atten_conv2/avgpool/GlobalAveragePool_output_0, %onnx::Conv_1990, %onnx::Conv_1991), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.conv.Conv2d::fc # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\conv.py:454:0
  %/atten_conv2/relu/Relu_output_0 : Float(*, 16, 1, 1, strides=[16, 1, 1, 1], requires_grad=1, device=cpu) = onnx::Relu[onnx_name="/atten_conv2/relu/Relu"](%/atten_conv2/fc/Conv_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.activation.ReLU::relu # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:1498:0
  %/atten_conv2/position_fc/Conv_output_0 : Float(*, 225, 1, 1, strides=[225, 1, 1, 1], requires_grad=0, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/atten_conv2/position_fc/Conv"](%/atten_conv2/relu/Relu_output_0, %atten_conv2.position_fc.weight, %atten_conv2.position_fc.bias), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.conv.Conv2d::position_fc # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\conv.py:454:0
  %/atten_conv2/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/atten_conv2/Shape"](%/atten_conv2/relu/Relu_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/atten_conv2/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/atten_conv2/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/atten_conv2/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/atten_conv2/Gather"](%/atten_conv2/Shape_output_0, %/atten_conv2/Constant_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %onnx::Unsqueeze_1666 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/atten_conv2/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/atten_conv2/Unsqueeze"](%/atten_conv2/Gather_output_0, %onnx::Unsqueeze_1666), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2
  %/atten_conv2/Constant_1_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/atten_conv2/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2
  %/atten_conv2/Constant_2_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={5}, onnx_name="/atten_conv2/Constant_2"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2
  %/atten_conv2/Constant_3_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={5}, onnx_name="/atten_conv2/Constant_3"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2
  %/atten_conv2/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/atten_conv2/Concat"](%/atten_conv2/Unsqueeze_output_0, %/atten_conv2/Constant_1_output_0, %/atten_conv2/Constant_2_output_0, %/atten_conv2/Constant_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/atten_conv2/Reshape_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/atten_conv2/Reshape"](%/atten_conv2/position_fc/Conv_output_0, %/atten_conv2/Concat_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:234:0
  %/atten_conv2/Constant_4_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={30}, onnx_name="/atten_conv2/Constant_4"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:235:0
  %/atten_conv2/Div_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Div[onnx_name="/atten_conv2/Div"](%/atten_conv2/Reshape_output_0, %/atten_conv2/Constant_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:235:0
  %/atten_conv2/sigmoid/Sigmoid_output_0 : Float(*, 9, 5, 5, strides=[225, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Sigmoid[onnx_name="/atten_conv2/sigmoid/Sigmoid"](%/atten_conv2/Div_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.DynamicAttention2D::atten_conv2/torch.nn.modules.activation.Sigmoid::sigmoid # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\modules\activation.py:301:0
  %/w2/Constant_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={2}, onnx_name="/w2/Constant"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/w2/Constant_1"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={9223372036854775807}, onnx_name="/w2/Constant_2"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Slice_output_0 : Float(*, 256, 1, 5, device=cpu) = onnx::Slice[onnx_name="/w2/Slice"](%/linear_stages.1/Add_output_0, %/w2/Constant_1_output_0, %/w2/Constant_2_output_0, %/w2/Constant_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_3_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={2}, onnx_name="/w2/Constant_3"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_4_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_4"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_5_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_5"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Slice_1_output_0 : Float(*, 256, 1, 5, device=cpu) = onnx::Slice[onnx_name="/w2/Slice_1"](%/linear_stages.1/Add_output_0, %/w2/Constant_4_output_0, %/w2/Constant_5_output_0, %/w2/Constant_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Concat_output_0 : Float(*, 256, 7, 5, device=cpu) = onnx::Concat[axis=2, onnx_name="/w2/Concat"](%/w2/Slice_output_0, %/linear_stages.1/Add_output_0, %/w2/Slice_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_6_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_6"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_7_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/w2/Constant_7"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_8_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={9223372036854775807}, onnx_name="/w2/Constant_8"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Slice_2_output_0 : Float(*, 256, 7, 1, device=cpu) = onnx::Slice[onnx_name="/w2/Slice_2"](%/w2/Concat_output_0, %/w2/Constant_7_output_0, %/w2/Constant_8_output_0, %/w2/Constant_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_9_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_9"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_10_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_10"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_11_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_11"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Slice_3_output_0 : Float(*, 256, 7, 1, device=cpu) = onnx::Slice[onnx_name="/w2/Slice_3"](%/w2/Concat_output_0, %/w2/Constant_10_output_0, %/w2/Constant_11_output_0, %/w2/Constant_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Concat_1_output_0 : Float(*, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=1, device=cpu) = onnx::Concat[axis=3, onnx_name="/w2/Concat_1"](%/w2/Slice_2_output_0, %/w2/Concat_output_0, %/w2/Slice_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_12_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={4}, onnx_name="/w2/Constant_12"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_13_output_0 : Long(4, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value= 1  1  1  1 [ CPULongType{4} ], onnx_name="/w2/Constant_13"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/ConstantOfShape_output_0 : Long(4, strides=[1], device=cpu) = onnx::ConstantOfShape[value={0}, onnx_name="/w2/ConstantOfShape"](%/w2/Constant_12_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Concat_2_output_0 : Long(8, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w2/Concat_2"](%/w2/Constant_13_output_0, %/w2/ConstantOfShape_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_14_output_0 : Long(2, strides=[1], device=cpu) = onnx::Constant[value=-1  2 [ CPULongType{2} ], onnx_name="/w2/Constant_14"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Reshape_output_0 : Long(4, 2, strides=[2, 1], device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w2/Reshape"](%/w2/Concat_2_output_0, %/w2/Constant_14_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_15_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_15"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_16_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/w2/Constant_16"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_17_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-9223372036854775807}, onnx_name="/w2/Constant_17"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_18_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/w2/Constant_18"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Slice_4_output_0 : Long(4, 2, strides=[2, 1], device=cpu) = onnx::Slice[onnx_name="/w2/Slice_4"](%/w2/Reshape_output_0, %/w2/Constant_16_output_0, %/w2/Constant_17_output_0, %/w2/Constant_15_output_0, %/w2/Constant_18_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Transpose_output_0 : Long(2, 4, strides=[4, 1], device=cpu) = onnx::Transpose[perm=[1, 0], onnx_name="/w2/Transpose"](%/w2/Slice_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Constant_19_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}, onnx_name="/w2/Constant_19"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Reshape_1_output_0 : Long(8, strides=[1], device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w2/Reshape_1"](%/w2/Transpose_output_0, %/w2/Constant_19_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Cast_output_0 : Long(8, strides=[1], device=cpu) = onnx::Cast[to=7, onnx_name="/w2/Cast"](%/w2/Reshape_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Pad_output_0 : Float(*, *, *, *, strides=[12544, 49, 7, 1], requires_grad=1, device=cpu) = onnx::Pad[mode="edge", onnx_name="/w2/Pad"](%/linear_stages.1/Add_output_0, %/w2/Cast_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4552:0
  %/w2/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape"](%/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Constant_20_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_20"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather"](%/w2/Shape_output_0, %/w2/Constant_20_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_1"](%/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Constant_21_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_21"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_1"](%/w2/Shape_1_output_0, %/w2/Constant_21_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_2"](%/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Constant_22_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/w2/Constant_22"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_2"](%/w2/Shape_2_output_0, %/w2/Constant_22_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Shape_3_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_3"](%/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Constant_23_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_23"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Gather_3_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_3"](%/w2/Shape_3_output_0, %/w2/Constant_23_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Constant_24_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_24"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/w2/Sub_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/w2/Sub"](%/w2/Gather_2_output_0, %/w2/Constant_24_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/w2/Constant_25_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_25"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/w2/Add_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/w2/Add"](%/w2/Sub_output_0, %/w2/Constant_25_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/w2/Constant_26_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_26"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/w2/Sub_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/w2/Sub_1"](%/w2/Gather_3_output_0, %/w2/Constant_26_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/w2/Constant_27_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_27"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/w2/Add_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/w2/Add_1"](%/w2/Sub_1_output_0, %/w2/Constant_27_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/w2/Shape_4_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_4"](%/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_28_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/w2/Constant_28"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Gather_4_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_4"](%/w2/Shape_4_output_0, %/w2/Constant_28_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Shape_5_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_5"](%/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_29_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_29"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Gather_5_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_5"](%/w2/Shape_5_output_0, %/w2/Constant_29_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_30_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_30"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Add_2_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/w2/Add_2"](%/w2/Gather_4_output_0, %/w2/Constant_30_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_31_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/w2/Constant_31"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Sub_2_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/w2/Sub_2"](%/w2/Add_2_output_0, %/w2/Constant_31_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_32_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_32"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_33_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_33"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Range_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/w2/Range"](%/w2/Constant_32_output_0, %/w2/Sub_2_output_0, %/w2/Constant_33_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_34_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_34"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Unsqueeze_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze"](%/w2/Range_output_0, %/w2/Constant_34_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_35_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/w2/Constant_35"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Add_3_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/w2/Add_3"](%/w2/Unsqueeze_output_0, %/w2/Constant_35_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_36_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_36"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Add_4_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/w2/Add_4"](%/w2/Gather_5_output_0, %/w2/Constant_36_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_37_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/w2/Constant_37"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Sub_3_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/w2/Sub_3"](%/w2/Add_4_output_0, %/w2/Constant_37_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_38_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_38"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_39_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_39"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Range_1_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/w2/Range_1"](%/w2/Constant_38_output_0, %/w2/Sub_3_output_0, %/w2/Constant_39_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_40_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_40"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Unsqueeze_1_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_1"](%/w2/Range_1_output_0, %/w2/Constant_40_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_41_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/w2/Constant_41"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Add_5_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/w2/Add_5"](%/w2/Unsqueeze_1_output_0, %/w2/Constant_41_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Shape_6_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_6"](%/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_42_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_42"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Gather_6_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_6"](%/w2/Shape_6_output_0, %/w2/Constant_42_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Shape_7_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_7"](%/w2/Concat_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_43_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_43"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Gather_7_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_7"](%/w2/Shape_7_output_0, %/w2/Constant_43_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_44_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/w2/Constant_44"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Mul_output_0 : Long(device=cpu) = onnx::Mul[onnx_name="/w2/Mul"](%/w2/Gather_7_output_0, %/w2/Constant_44_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_45_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_45"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_2"](%/w2/Gather_6_output_0, %/w2/Constant_45_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_46_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_46"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Unsqueeze_3_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_3"](%/w2/Mul_output_0, %/w2/Constant_46_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_47_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/w2/Constant_47"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Concat_3_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w2/Concat_3"](%/w2/Unsqueeze_2_output_0, %/w2/Unsqueeze_3_output_0, %/w2/Constant_47_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_48_output_0 : Long(8, strides=[1], device=cpu) = onnx::Constant[value= 0  0  0  0  0  0  0  0 [ CPULongType{8} ], onnx_name="/w2/Constant_48"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Pad_1_output_0 : Float(*, 256, 7, 7, device=cpu) = onnx::Pad[onnx_name="/w2/Pad_1"](%/w2/Concat_1_output_0, %/w2/Constant_48_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Gather_8_output_0 : Float(*, 256, 3, *, 7, device=cpu) = onnx::Gather[axis=2, onnx_name="/w2/Gather_8"](%/w2/Pad_1_output_0, %/w2/Add_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Gather_9_output_0 : Float(*, 256, 3, *, 3, *, device=cpu) = onnx::Gather[axis=4, onnx_name="/w2/Gather_9"](%/w2/Gather_8_output_0, %/w2/Add_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Transpose_1_output_0 : Float(*, 256, 3, 3, *, *, device=cpu) = onnx::Transpose[perm=[0, 1, 2, 4, 3, 5], onnx_name="/w2/Transpose_1"](%/w2/Gather_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Reshape_2_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w2/Reshape_2"](%/w2/Transpose_1_output_0, %/w2/Concat_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Mul_1_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/w2/Mul_1"](%/w2/Add_output_0, %/w2/Add_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1793 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_4_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_4"](%/w2/Gather_output_0, %onnx::Unsqueeze_1793), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1795 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_5_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_5"](%/w2/Gather_1_output_0, %onnx::Unsqueeze_1795), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/w2/Constant_49_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/w2/Constant_49"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1799 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_6_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_6"](%/w2/Mul_1_output_0, %onnx::Unsqueeze_1799), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/w2/Concat_4_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w2/Concat_4"](%/w2/Unsqueeze_4_output_0, %/w2/Unsqueeze_5_output_0, %/w2/Constant_49_output_0, %/w2/Unsqueeze_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Reshape_3_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w2/Reshape_3"](%/w2/Reshape_2_output_0, %/w2/Concat_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1803 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_7_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_7"](%/w2/Gather_output_0, %onnx::Unsqueeze_1803), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/w2/Constant_50_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_50"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/w2/Constant_51_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/w2/Constant_51"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1809 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_8_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_8"](%/w2/Mul_1_output_0, %onnx::Unsqueeze_1809), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/w2/Concat_5_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w2/Concat_5"](%/w2/Unsqueeze_7_output_0, %/w2/Constant_50_output_0, %/w2/Constant_51_output_0, %/w2/Unsqueeze_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Reshape_4_output_0 : Float(*, *, *, *, strides=[225, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w2/Reshape_4"](%/atten_conv2/sigmoid/Sigmoid_output_0, %/w2/Concat_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Mul_2_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Mul[onnx_name="/w2/Mul_2"](%/w2/Reshape_3_output_0, %/w2/Reshape_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Constant_52_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_52"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Mul_3_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/w2/Mul_3"](%/w2/Gather_1_output_0, %/w2/Constant_52_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Constant_53_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_53"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Mul_4_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/w2/Mul_4"](%/w2/Mul_3_output_0, %/w2/Constant_53_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1818 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_9_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_9"](%/w2/Gather_output_0, %onnx::Unsqueeze_1818), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1820 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_10_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_10"](%/w2/Mul_4_output_0, %onnx::Unsqueeze_1820), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1822 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_11_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_11"](%/w2/Mul_1_output_0, %onnx::Unsqueeze_1822), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/w2/Concat_6_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w2/Concat_6"](%/w2/Unsqueeze_9_output_0, %/w2/Unsqueeze_10_output_0, %/w2/Unsqueeze_11_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Reshape_5_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w2/Reshape_5"](%/w2/Mul_2_output_0, %/w2/Concat_6_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Transpose_2_output_0 : Float(*, *, *, strides=[57600, 1, 25], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/w2/Transpose_2"](%/w2/Reshape_5_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/w2/MatMul_output_0 : Float(*, *, 3, strides=[75, 3, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/w2/MatMul"](%/w2/Transpose_2_output_0, %onnx::MatMul_2186), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/w2/Transpose_3_output_0 : Float(*, 3, *, strides=[75, 1, 3], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/w2/Transpose_3"](%/w2/MatMul_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/w2/Col2Im_output_0 : Float(*, 3, 5, 5, strides=[75, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Col2Im[dilations=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/w2/Col2Im"](%/w2/Transpose_3_output_0, %onnx::Col2Im_299, %onnx::Col2Im_139), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4874:0
  %/w2/Shape_8_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_8"](%/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Constant_54_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_54"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Gather_10_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_10"](%/w2/Shape_8_output_0, %/w2/Constant_54_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Shape_9_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_9"](%/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Constant_55_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_55"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Gather_11_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_11"](%/w2/Shape_9_output_0, %/w2/Constant_55_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Shape_10_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_10"](%/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Constant_56_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/w2/Constant_56"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Gather_12_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_12"](%/w2/Shape_10_output_0, %/w2/Constant_56_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Shape_11_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_11"](%/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Constant_57_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_57"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Gather_13_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_13"](%/w2/Shape_11_output_0, %/w2/Constant_57_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:162:0
  %/w2/Constant_58_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_58"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/w2/Sub_4_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/w2/Sub_4"](%/w2/Gather_12_output_0, %/w2/Constant_58_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/w2/Constant_59_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_59"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/w2/Add_6_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/w2/Add_6"](%/w2/Sub_4_output_0, %/w2/Constant_59_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:163:0
  %/w2/Constant_60_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_60"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/w2/Sub_5_output_0 : Long(requires_grad=0, device=cpu) = onnx::Sub[onnx_name="/w2/Sub_5"](%/w2/Gather_13_output_0, %/w2/Constant_60_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/w2/Constant_61_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_61"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/w2/Add_7_output_0 : Long(requires_grad=0, device=cpu) = onnx::Add[onnx_name="/w2/Add_7"](%/w2/Sub_5_output_0, %/w2/Constant_61_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:164:0
  %/w2/Shape_12_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_12"](%/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_62_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/w2/Constant_62"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Gather_14_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_14"](%/w2/Shape_12_output_0, %/w2/Constant_62_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Shape_13_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_13"](%/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_63_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_63"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Gather_15_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_15"](%/w2/Shape_13_output_0, %/w2/Constant_63_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_64_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_64"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Add_8_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/w2/Add_8"](%/w2/Gather_14_output_0, %/w2/Constant_64_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_65_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/w2/Constant_65"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Sub_6_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/w2/Sub_6"](%/w2/Add_8_output_0, %/w2/Constant_65_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_66_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_66"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_67_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_67"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Range_2_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/w2/Range_2"](%/w2/Constant_66_output_0, %/w2/Sub_6_output_0, %/w2/Constant_67_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_68_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_68"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Unsqueeze_12_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_12"](%/w2/Range_2_output_0, %/w2/Constant_68_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_69_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/w2/Constant_69"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Add_9_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/w2/Add_9"](%/w2/Unsqueeze_12_output_0, %/w2/Constant_69_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_70_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_70"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Add_10_output_0 : Long(device=cpu) = onnx::Add[onnx_name="/w2/Add_10"](%/w2/Gather_15_output_0, %/w2/Constant_70_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_71_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/w2/Constant_71"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Sub_7_output_0 : Long(device=cpu) = onnx::Sub[onnx_name="/w2/Sub_7"](%/w2/Add_10_output_0, %/w2/Constant_71_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_72_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_72"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_73_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_73"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Range_3_output_0 : Long(*, device=cpu) = onnx::Range[onnx_name="/w2/Range_3"](%/w2/Constant_72_output_0, %/w2/Sub_7_output_0, %/w2/Constant_73_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_74_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_74"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Unsqueeze_13_output_0 : Long(1, *, device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_13"](%/w2/Range_3_output_0, %/w2/Constant_74_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_75_output_0 : Long(3, 1, strides=[1, 1], requires_grad=0, device=cpu) = onnx::Constant[value= 0  1  2 [ CPULongType{3,1} ], onnx_name="/w2/Constant_75"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Add_11_output_0 : Long(3, *, device=cpu) = onnx::Add[onnx_name="/w2/Add_11"](%/w2/Unsqueeze_13_output_0, %/w2/Constant_75_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Shape_14_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_14"](%/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_76_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_76"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Gather_16_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_16"](%/w2/Shape_14_output_0, %/w2/Constant_76_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Shape_15_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/w2/Shape_15"](%/w2/Pad_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_77_output_0 : Long(device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_77"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Gather_17_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/w2/Gather_17"](%/w2/Shape_15_output_0, %/w2/Constant_77_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_78_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/w2/Constant_78"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Mul_5_output_0 : Long(device=cpu) = onnx::Mul[onnx_name="/w2/Mul_5"](%/w2/Gather_17_output_0, %/w2/Constant_78_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_79_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_79"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Unsqueeze_14_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_14"](%/w2/Gather_16_output_0, %/w2/Constant_79_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_80_output_0 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}, onnx_name="/w2/Constant_80"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Unsqueeze_15_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_15"](%/w2/Mul_5_output_0, %/w2/Constant_80_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_81_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/w2/Constant_81"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Concat_7_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w2/Concat_7"](%/w2/Unsqueeze_14_output_0, %/w2/Unsqueeze_15_output_0, %/w2/Constant_81_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Constant_82_output_0 : Long(8, strides=[1], device=cpu) = onnx::Constant[value= 0  0  0  0  0  0  0  0 [ CPULongType{8} ], onnx_name="/w2/Constant_82"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Pad_2_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pad[onnx_name="/w2/Pad_2"](%/w2/Pad_output_0, %/w2/Constant_82_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Gather_18_output_0 : Float(*, *, 3, *, *, device=cpu) = onnx::Gather[axis=2, onnx_name="/w2/Gather_18"](%/w2/Pad_2_output_0, %/w2/Add_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Gather_19_output_0 : Float(*, *, 3, *, 3, *, device=cpu) = onnx::Gather[axis=4, onnx_name="/w2/Gather_19"](%/w2/Gather_18_output_0, %/w2/Add_11_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Transpose_4_output_0 : Float(*, *, 3, 3, *, *, device=cpu) = onnx::Transpose[perm=[0, 1, 2, 4, 3, 5], onnx_name="/w2/Transpose_4"](%/w2/Gather_19_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Reshape_6_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w2/Reshape_6"](%/w2/Transpose_4_output_0, %/w2/Concat_7_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4853:0
  %/w2/Mul_6_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/w2/Mul_6"](%/w2/Add_6_output_0, %/w2/Add_7_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1911 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_16_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_16"](%/w2/Gather_10_output_0, %onnx::Unsqueeze_1911), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1913 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_17_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_17"](%/w2/Gather_11_output_0, %onnx::Unsqueeze_1913), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/w2/Constant_83_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/w2/Constant_83"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1917 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_18_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_18"](%/w2/Mul_6_output_0, %onnx::Unsqueeze_1917), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/w2/Concat_8_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w2/Concat_8"](%/w2/Unsqueeze_16_output_0, %/w2/Unsqueeze_17_output_0, %/w2/Constant_83_output_0, %/w2/Unsqueeze_18_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Reshape_7_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w2/Reshape_7"](%/w2/Reshape_6_output_0, %/w2/Concat_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1921 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_19_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_19"](%/w2/Gather_10_output_0, %onnx::Unsqueeze_1921), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/w2/Constant_84_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/w2/Constant_84"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/w2/Constant_85_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={9}, onnx_name="/w2/Constant_85"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1927 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_20_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_20"](%/w2/Mul_6_output_0, %onnx::Unsqueeze_1927), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/w2/Concat_9_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w2/Concat_9"](%/w2/Unsqueeze_19_output_0, %/w2/Constant_84_output_0, %/w2/Constant_85_output_0, %/w2/Unsqueeze_20_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Reshape_8_output_0 : Float(*, *, *, *, strides=[225, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w2/Reshape_8"](%/atten_conv2/sigmoid/Sigmoid_output_0, %/w2/Concat_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Mul_7_output_0 : Float(*, *, *, *, strides=[57600, 225, 25, 1], requires_grad=1, device=cpu) = onnx::Mul[onnx_name="/w2/Mul_7"](%/w2/Reshape_7_output_0, %/w2/Reshape_8_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Constant_86_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_86"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Mul_8_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/w2/Mul_8"](%/w2/Gather_11_output_0, %/w2/Constant_86_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Constant_87_output_0 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={3}, onnx_name="/w2/Constant_87"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Mul_9_output_0 : Long(requires_grad=0, device=cpu) = onnx::Mul[onnx_name="/w2/Mul_9"](%/w2/Mul_8_output_0, %/w2/Constant_87_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %onnx::Unsqueeze_1936 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_21_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_21"](%/w2/Gather_10_output_0, %onnx::Unsqueeze_1936), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1938 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_22_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_22"](%/w2/Mul_9_output_0, %onnx::Unsqueeze_1938), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %onnx::Unsqueeze_1940 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={0}]()
  %/w2/Unsqueeze_23_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[onnx_name="/w2/Unsqueeze_23"](%/w2/Mul_6_output_0, %onnx::Unsqueeze_1940), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2
  %/w2/Concat_10_output_0 : Long(3, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/w2/Concat_10"](%/w2/Unsqueeze_21_output_0, %/w2/Unsqueeze_22_output_0, %/w2/Unsqueeze_23_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Reshape_9_output_0 : Float(*, *, *, strides=[57600, 25, 1], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/w2/Reshape_9"](%/w2/Mul_7_output_0, %/w2/Concat_10_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:166:0
  %/w2/Transpose_5_output_0 : Float(*, *, *, strides=[57600, 1, 25], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/w2/Transpose_5"](%/w2/Reshape_9_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/w2/MatMul_1_output_0 : Float(*, *, 3, strides=[75, 3, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/w2/MatMul_1"](%/w2/Transpose_5_output_0, %onnx::MatMul_2196), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/w2/Transpose_6_output_0 : Float(*, 3, *, strides=[75, 1, 3], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/w2/Transpose_6"](%/w2/MatMul_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:167:0
  %/w2/Col2Im_1_output_0 : Float(*, 3, 5, 5, strides=[75, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Col2Im[dilations=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/w2/Col2Im_1"](%/w2/Transpose_6_output_0, %onnx::Col2Im_299, %onnx::Col2Im_139), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\python310_env\lib\site-packages\torch\nn\functional.py:4874:0
  %/w2/Add_12_output_0 : Float(*, 3, 5, 5, strides=[75, 25, 5, 1], requires_grad=1, device=cpu) = onnx::Add[onnx_name="/w2/Add_12"](%/w2/Col2Im_output_0, %/w2/Col2Im_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork::/src.network.dgridconv_autogrids.TwoBranchDGridConv::w2 # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:187:0
  %/Transpose_1_output_0 : Float(*, 5, 5, 3, strides=[75, 5, 1, 25], requires_grad=1, device=cpu) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/Transpose_1"](%/w2/Add_12_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:86:0
  %/Constant_3_output_0 : Long(3, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value=  1  25   3 [ CPULongType{3} ], onnx_name="/Constant_3"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:86:0
  %/Reshape_1_output_0 : Float(1, 25, 3, strides=[25, 1, 25], requires_grad=1, device=cpu) = onnx::Reshape[allowzero=0, onnx_name="/Reshape_1"](%/Transpose_1_output_0, %/Constant_3_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:86:0
  %/Transpose_2_output_0 : Float(1, *, 25, strides=[425, 1, 17], requires_grad=0, device=cpu) = onnx::Transpose[perm=[0, 2, 1], onnx_name="/Transpose_2"](%/Tile_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:87:0
  %onnx::ReduceSum_1968 : Long(1, strides=[1], device=cpu) = onnx::Constant[value={-1}]()
  %/ReduceSum_output_0 : Float(1, *, 1, strides=[17, 1, 1], requires_grad=0, device=cpu) = onnx::ReduceSum[keepdims=1, onnx_name="/ReduceSum"](%/Transpose_2_output_0, %onnx::ReduceSum_1968), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:88:0
  %/Constant_4_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-08}, onnx_name="/Constant_4"](), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:88:0
  %/Add_output_0 : Float(1, *, 1, strides=[17, 1, 1], requires_grad=0, device=cpu) = onnx::Add[onnx_name="/Add"](%/ReduceSum_output_0, %/Constant_4_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:88:0
  %/MatMul_1_output_0 : Float(1, *, 3, strides=[51, 3, 1], requires_grad=1, device=cpu) = onnx::MatMul[onnx_name="/MatMul_1"](%/Transpose_2_output_0, %/Reshape_1_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:89:0
  %1973 : Float(1, *, 3, strides=[51, 3, 1], requires_grad=1, device=cpu) = onnx::Div[onnx_name="/Div"](%/MatMul_1_output_0, %/Add_output_0), scope: src.network.dgridconv_autogrids.AutoDynamicGridLiftingNetwork:: # D:\VS_ws\python\GridConv\src\network\dgridconv_autogrids.py:89:0
  return (%1973)


==================Options=================
{   'autosgt_prior': 'standard',
    'batch': 200,
    'ckpt': 'checkpoint\\temporary',
    'data_rootdir': './data/',
    'dropout': 0.25,
    'epoch': 200,
    'eval': False,
    'exp': 'temporary',
    'grid_shape': [5, 5],
    'hidsize': 256,
    'input': 'gt',
    'lifting_model': 'gridconv',
    'load': None,
    'loss': 'l2',
    'lr': 0.001,
    'lr_decay': 10,
    'lr_gamma': 0.96,
    'max_temp': 30,
    'num_block': 2,
    'padding_mode': ['c', 'r'],
    'prepare_grid': True,
    'procrustes': False,
    'temp_epoch': 10,
    'test_batch': 1000}
==========================================

ori_onnx model saved to D:/VS_ws/python/mocap/weights/autogrid20.onnx
